{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.4.2",
    "schemaVersion": 1003,
    "oldestForwardsCompatibleVersion": 1001
  },
  "kind": "Package",
  "canonicalReference": "@azure/core-amqp!",
  "docComment": "",
  "name": "@azure/core-amqp",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@azure/core-amqp!",
      "name": "",
      "members": [
        {
          "kind": "Interface",
          "canonicalReference": "@azure/core-amqp!AsyncLockOptions:interface",
          "docComment": "/**\n * Describes the options that can be provided to create an async lock.  @interface AsyncLockOptions\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface AsyncLockOptions "
            }
          ],
          "releaseTag": "Public",
          "name": "AsyncLockOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!AsyncLockOptions#domainReentrant:member",
              "docComment": "/**\n * @property {boolean} [domainReentrant] Whether lock can reenter in the same domain. Default is: false.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "domainReentrant?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "domainReentrant",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!AsyncLockOptions#maxPending:member",
              "docComment": "/**\n * @property {number} [maxPending] Maximum pending tasks. Default is: 1000.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxPending?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "maxPending",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!AsyncLockOptions#Promise:member",
              "docComment": "/**\n * @property {any} [Promise] Your implementation of the promise. Default is: global promise.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Promise?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "Promise",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!AsyncLockOptions#timeout:member",
              "docComment": "/**\n * @property {number} [timeout] The max timeout. Default is: 0 (never timeout).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "timeout?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "timeout",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@azure/core-amqp!CbsClient:class",
          "docComment": "/**\n * @class CbsClient Describes the EventHub/ServiceBus Cbs client that talks to the $cbs endopint over AMQP connection.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class CbsClient "
            }
          ],
          "releaseTag": "Public",
          "name": "CbsClient",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@azure/core-amqp!CbsClient:constructor(1)",
              "docComment": "/**\n * @constructor Constructs a new instance of the `CbsClient` class\n *\n * @param  - {Connection} connection The AMQP conection.\n *\n * @param  - {string} connectionLock A unique string (usually a guid) per connection.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(connection: "
                },
                {
                  "kind": "Reference",
                  "text": "Connection",
                  "canonicalReference": "rhea-promise!Connection:class"
                },
                {
                  "kind": "Content",
                  "text": ", connectionLock: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "connection",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "connectionLock",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@azure/core-amqp!CbsClient#cbsLock:member",
              "docComment": "/**\n * @property {string} cbsLock The unqiue lock name per $cbs session per connection that is used to acquire the lock for establishing a cbs session if one does not exist for an aqmp connection.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly cbsLock: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "cbsLock",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@azure/core-amqp!CbsClient#close:member(1)",
              "docComment": "/**\n * Closes the AMQP cbs session to the EventHub/ServiceBus for this client, returning a promise that will be resolved when disconnection is completed.  @return {Promise<void>}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "close(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "close"
            },
            {
              "kind": "Property",
              "canonicalReference": "@azure/core-amqp!CbsClient#connection:member",
              "docComment": "/**\n * @property {Connection} connection The AMQP connection.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "connection: "
                },
                {
                  "kind": "Reference",
                  "text": "Connection",
                  "canonicalReference": "rhea-promise!Connection:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "connection",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@azure/core-amqp!CbsClient#connectionLock:member",
              "docComment": "/**\n * @property {string} connectionLock The unqiue lock name per connection that is used to acquire the lock for establishing an amqp connection if one does not exist.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly connectionLock: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "connectionLock",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@azure/core-amqp!CbsClient#endpoint:member",
              "docComment": "/**\n * @property {string} endpoint CBS endpoint - \"$cbs\"\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly endpoint: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "endpoint",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@azure/core-amqp!CbsClient#init:member(1)",
              "docComment": "/**\n * Creates a singleton instance of the CBS session if it hasn't been initialized previously on the given connection.\n *\n * @returns {Promise<void>} Promise<void>.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "init(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "init"
            },
            {
              "kind": "Method",
              "canonicalReference": "@azure/core-amqp!CbsClient#negotiateClaim:member(1)",
              "docComment": "/**\n * Negotiates the CBS claim with the EventHub/ServiceBus Service.\n *\n * @param  - {string} audience The entity token audience for which the token is requested in one of the following forms:\n *\n * - **ServiceBus** - **Sender** - `\"sb://<yournamespace>.servicebus.windows.net/<queue-name>\"` - `\"sb://<yournamespace>.servicebus.windows.net/<topic-name>\"`\n *\n * - **Receiver** - `\"sb://<yournamespace>.servicebus.windows.net/<queue-name>\"` - `\"sb://<yournamespace>.servicebus.windows.net/<topic-name>\"`\n *\n * - **ManagementClient** - `\"sb://<your-namespace>.servicebus.windows.net/<queue-name>/$management\"`. - `\"sb://<your-namespace>.servicebus.windows.net/<topic-name>/$management\"`.\n *\n * - **EventHubs** - **Sender** - `\"sb://<yournamespace>.servicebus.windows.net/<hubName>\"` - `\"sb://<yournamespace>.servicebus.windows.net/<hubName>/Partitions/<partitionId>\"`.\n *\n * - **Receiver** - `\"sb://<your-namespace>.servicebus.windows.net/<event-hub-name>/ConsumerGroups/<consumer-group-name>/Partitions/<partition-id>\"`.\n *\n * - **ManagementClient** - `\"sb://<your-namespace>.servicebus.windows.net/<event-hub-name>/$management\"`.\n *\n * @param  - {TokenInfo} tokenObject The token object that needs to be sent in the put-token request.  @return {Promise<any>} Returns a Promise that resolves when $cbs authentication is successful and rejects when an error occurs during $cbs authentication.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "negotiateClaim(audience: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", tokenObject: "
                },
                {
                  "kind": "Reference",
                  "text": "AccessToken",
                  "canonicalReference": "@azure/core-auth!AccessToken:interface"
                },
                {
                  "kind": "Content",
                  "text": ", tokenType: "
                },
                {
                  "kind": "Reference",
                  "text": "TokenType",
                  "canonicalReference": "@azure/core-amqp!TokenType:enum"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CbsResponse",
                  "canonicalReference": "@azure/core-amqp!CbsResponse:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "audience",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "tokenObject",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "tokenType",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "negotiateClaim"
            },
            {
              "kind": "Method",
              "canonicalReference": "@azure/core-amqp!CbsClient#remove:member(1)",
              "docComment": "/**\n * Removes the AMQP cbs session to the EventHub/ServiceBus for this client,\n *\n * @returns {void} void\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "remove(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "remove"
            },
            {
              "kind": "Property",
              "canonicalReference": "@azure/core-amqp!CbsClient#replyTo:member",
              "docComment": "/**\n * @property {string} replyTo CBS replyTo - The reciever link name that the service should reply to.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly replyTo: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "replyTo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@azure/core-amqp!CbsResponse:interface",
          "docComment": "/**\n * Describes the CBS Response.  @interface CbsResponse\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CbsResponse "
            }
          ],
          "releaseTag": "Public",
          "name": "CbsResponse",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!CbsResponse#correlationId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "correlationId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "correlationId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!CbsResponse#satusDescription:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "satusDescription: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "satusDescription",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!CbsResponse#statusCode:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "statusCode: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "statusCode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Enum",
          "canonicalReference": "@azure/core-amqp!ConditionErrorNameMapper:enum",
          "docComment": "/**\n * Maps the amqp error conditions to the Error names.  @enum {ConditionErrorNameMapper}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum ConditionErrorNameMapper "
            }
          ],
          "releaseTag": "Public",
          "name": "ConditionErrorNameMapper",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionErrorNameMapper.\"amqp:connection:forced\":member",
              "docComment": "/**\n * Error is thrown when an operator intervened to close the connection for some reason.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"amqp:connection:forced\" = "
                },
                {
                  "kind": "Content",
                  "text": "\"ConnectionForcedError\""
                }
              ],
              "releaseTag": "Public",
              "name": "\"amqp:connection:forced\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionErrorNameMapper.\"amqp:connection:framing-error\":member",
              "docComment": "/**\n * Error is thrown when a valid frame header cannot be formed from the incoming byte stream.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"amqp:connection:framing-error\" = "
                },
                {
                  "kind": "Content",
                  "text": "\"FramingError\""
                }
              ],
              "releaseTag": "Public",
              "name": "\"amqp:connection:framing-error\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionErrorNameMapper.\"amqp:connection:redirect\":member",
              "docComment": "/**\n * Error is thrown when the container is no longer available on the current connection.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"amqp:connection:redirect\" = "
                },
                {
                  "kind": "Content",
                  "text": "\"ConnectionRedirectError\""
                }
              ],
              "releaseTag": "Public",
              "name": "\"amqp:connection:redirect\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionErrorNameMapper.\"amqp:decode-error\":member",
              "docComment": "/**\n * Error is thrown when data could not be decoded.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"amqp:decode-error\" = "
                },
                {
                  "kind": "Content",
                  "text": "\"DecodeError\""
                }
              ],
              "releaseTag": "Public",
              "name": "\"amqp:decode-error\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionErrorNameMapper.\"amqp:frame-size-too-small\":member",
              "docComment": "/**\n * Error is thrown when the peer cannot send a frame because the smallest encoding of the performative with the currently valid values would be too large to fit within a frame of the agreed maximum frame size.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"amqp:frame-size-too-small\" = "
                },
                {
                  "kind": "Content",
                  "text": "\"FrameSizeTooSmallError\""
                }
              ],
              "releaseTag": "Public",
              "name": "\"amqp:frame-size-too-small\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionErrorNameMapper.\"amqp:illegal-state\":member",
              "docComment": "/**\n * Error is thrown when the peer sent a frame that is not permitted in the current state.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"amqp:illegal-state\" = "
                },
                {
                  "kind": "Content",
                  "text": "\"IllegalStateError\""
                }
              ],
              "releaseTag": "Public",
              "name": "\"amqp:illegal-state\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionErrorNameMapper.\"amqp:internal-error\":member",
              "docComment": "/**\n * Error is thrown when an internal server error occured. You may have found a bug?\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"amqp:internal-error\" = "
                },
                {
                  "kind": "Content",
                  "text": "\"InternalServerError\""
                }
              ],
              "releaseTag": "Public",
              "name": "\"amqp:internal-error\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionErrorNameMapper.\"amqp:invalid-field\":member",
              "docComment": "/**\n * Error is thrown when an invalid field was passed in a frame body, and the operation could not proceed.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"amqp:invalid-field\" = "
                },
                {
                  "kind": "Content",
                  "text": "\"InvalidFieldError\""
                }
              ],
              "releaseTag": "Public",
              "name": "\"amqp:invalid-field\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionErrorNameMapper.\"amqp:link:detach-forced\":member",
              "docComment": "/**\n * Error is thrown when an operator intervened to detach for some reason.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"amqp:link:detach-forced\" = "
                },
                {
                  "kind": "Content",
                  "text": "\"DetachForcedError\""
                }
              ],
              "releaseTag": "Public",
              "name": "\"amqp:link:detach-forced\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionErrorNameMapper.\"amqp:link:message-size-exceeded\":member",
              "docComment": "/**\n * Error is thrown when the message sent is too large: the maximum size is 256Kb.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"amqp:link:message-size-exceeded\" = "
                },
                {
                  "kind": "Content",
                  "text": "\"MessageTooLargeError\""
                }
              ],
              "releaseTag": "Public",
              "name": "\"amqp:link:message-size-exceeded\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionErrorNameMapper.\"amqp:link:redirect\":member",
              "docComment": "/**\n * Error is thrown when the address provided cannot be resolved to a terminus at the current container.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"amqp:link:redirect\" = "
                },
                {
                  "kind": "Content",
                  "text": "\"LinkRedirectError\""
                }
              ],
              "releaseTag": "Public",
              "name": "\"amqp:link:redirect\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionErrorNameMapper.\"amqp:link:stolen\":member",
              "docComment": "/**\n * Error is thrown when two or more instances connect to the same partition with different epoch values.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"amqp:link:stolen\" = "
                },
                {
                  "kind": "Content",
                  "text": "\"ReceiverDisconnectedError\""
                }
              ],
              "releaseTag": "Public",
              "name": "\"amqp:link:stolen\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionErrorNameMapper.\"amqp:link:transfer-limit-exceeded\":member",
              "docComment": "/**\n * Error is thrown when the peer sent more message transfers than currently allowed on the link.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"amqp:link:transfer-limit-exceeded\" = "
                },
                {
                  "kind": "Content",
                  "text": "\"TransferLimitExceededError\""
                }
              ],
              "releaseTag": "Public",
              "name": "\"amqp:link:transfer-limit-exceeded\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionErrorNameMapper.\"amqp:not-allowed\":member",
              "docComment": "/**\n * Error is thrown when an operation is attempted but is not allowed.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"amqp:not-allowed\" = "
                },
                {
                  "kind": "Content",
                  "text": "\"InvalidOperationError\""
                }
              ],
              "releaseTag": "Public",
              "name": "\"amqp:not-allowed\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionErrorNameMapper.\"amqp:not-found\":member",
              "docComment": "/**\n * Error for signaling general communication errors related to messaging operations.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"amqp:not-found\" = "
                },
                {
                  "kind": "Content",
                  "text": "\"ServiceCommunicationError\""
                }
              ],
              "releaseTag": "Public",
              "name": "\"amqp:not-found\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionErrorNameMapper.\"amqp:not-implemented\":member",
              "docComment": "/**\n * Error is thrown when a feature is not implemented yet but the placeholder is present.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"amqp:not-implemented\" = "
                },
                {
                  "kind": "Content",
                  "text": "\"NotImplementedError\""
                }
              ],
              "releaseTag": "Public",
              "name": "\"amqp:not-implemented\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionErrorNameMapper.\"amqp:precondition-failed\":member",
              "docComment": "/**\n * Error is thrown when a condition that should have been met in order to execute an operation was not.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"amqp:precondition-failed\" = "
                },
                {
                  "kind": "Content",
                  "text": "\"PreconditionFailedError\""
                }
              ],
              "releaseTag": "Public",
              "name": "\"amqp:precondition-failed\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionErrorNameMapper.\"amqp:resource-deleted\":member",
              "docComment": "/**\n * Error is thrown when a server entity the client is working with has been deleted.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"amqp:resource-deleted\" = "
                },
                {
                  "kind": "Content",
                  "text": "\"ResourceDeletedError\""
                }
              ],
              "releaseTag": "Public",
              "name": "\"amqp:resource-deleted\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionErrorNameMapper.\"amqp:resource-limit-exceeded\":member",
              "docComment": "/**\n * Error is thrown the the Azure EventHub/ServiceBus quota has been exceeded. Quotas are reset periodically, this operation will have to wait until then. The messaging entity has reached its maximum allowable size. This can happen if the maximum number of receivers (which is 5) has already been opened on a per-consumer group level.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"amqp:resource-limit-exceeded\" = "
                },
                {
                  "kind": "Content",
                  "text": "\"QuotaExceededError\""
                }
              ],
              "releaseTag": "Public",
              "name": "\"amqp:resource-limit-exceeded\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionErrorNameMapper.\"amqp:resource-locked\":member",
              "docComment": "/**\n * Error is thrown when the client attempted to work with a server entity to which it has no access because another client is working with it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"amqp:resource-locked\" = "
                },
                {
                  "kind": "Content",
                  "text": "\"ResourceLockedError\""
                }
              ],
              "releaseTag": "Public",
              "name": "\"amqp:resource-locked\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionErrorNameMapper.\"amqp:session:errant-link\":member",
              "docComment": "/**\n * Error is thrown when input was received for a link that was detached with an error.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"amqp:session:errant-link\" = "
                },
                {
                  "kind": "Content",
                  "text": "\"ErrantLinkError\""
                }
              ],
              "releaseTag": "Public",
              "name": "\"amqp:session:errant-link\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionErrorNameMapper.\"amqp:session:handle-in-use\":member",
              "docComment": "/**\n * Error is thrown when an attach was received using a handle that is already in use for an attached link.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"amqp:session:handle-in-use\" = "
                },
                {
                  "kind": "Content",
                  "text": "\"HandleInUseError\""
                }
              ],
              "releaseTag": "Public",
              "name": "\"amqp:session:handle-in-use\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionErrorNameMapper.\"amqp:session:unattached-handle\":member",
              "docComment": "/**\n * Error is thrown when a frame (other than attach) was received referencing a handle which is not currently in use of an attached link.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"amqp:session:unattached-handle\" = "
                },
                {
                  "kind": "Content",
                  "text": "\"UnattachedHandleError\""
                }
              ],
              "releaseTag": "Public",
              "name": "\"amqp:session:unattached-handle\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionErrorNameMapper.\"amqp:session:window-violation\":member",
              "docComment": "/**\n * Error is thrown when the peer violated incoming window for the session.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"amqp:session:window-violation\" = "
                },
                {
                  "kind": "Content",
                  "text": "\"SessionWindowViolationError\""
                }
              ],
              "releaseTag": "Public",
              "name": "\"amqp:session:window-violation\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionErrorNameMapper.\"amqp:unauthorized-access\":member",
              "docComment": "/**\n * Error is thrown when the connection parameters are wrong and the server refused the connection.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"amqp:unauthorized-access\" = "
                },
                {
                  "kind": "Content",
                  "text": "\"UnauthorizedError\""
                }
              ],
              "releaseTag": "Public",
              "name": "\"amqp:unauthorized-access\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionErrorNameMapper.\"client.sender:not-enough-link-credit\":member",
              "docComment": "/**\n * Error is thrown when the client sender does not have enough link credits to send the message.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"client.sender:not-enough-link-credit\" = "
                },
                {
                  "kind": "Content",
                  "text": "\"SenderBusyError\""
                }
              ],
              "releaseTag": "Public",
              "name": "\"client.sender:not-enough-link-credit\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionErrorNameMapper.\"com.microsoft:address-already-in-use\":member",
              "docComment": "/**\n * Error is thrown when the address is already in use.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:address-already-in-use\" = "
                },
                {
                  "kind": "Content",
                  "text": "\"AddressAlreadyInUseError\""
                }
              ],
              "releaseTag": "Public",
              "name": "\"com.microsoft:address-already-in-use\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionErrorNameMapper.\"com.microsoft:argument-error\":member",
              "docComment": "/**\n * Error is thrown when an incorrect argument was received.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:argument-error\" = "
                },
                {
                  "kind": "Content",
                  "text": "\"ArgumentError\""
                }
              ],
              "releaseTag": "Public",
              "name": "\"com.microsoft:argument-error\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionErrorNameMapper.\"com.microsoft:argument-out-of-range\":member",
              "docComment": "/**\n * Error is thrown when an argument has a value that is out of the admissible range.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:argument-out-of-range\" = "
                },
                {
                  "kind": "Content",
                  "text": "\"ArgumentOutOfRangeError\""
                }
              ],
              "releaseTag": "Public",
              "name": "\"com.microsoft:argument-out-of-range\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionErrorNameMapper.\"com.microsoft:auth-failed\":member",
              "docComment": "/**\n * Error is thrown when the connection parameters are wrong and the server refused the connection.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:auth-failed\" = "
                },
                {
                  "kind": "Content",
                  "text": "\"UnauthorizedError\""
                }
              ],
              "releaseTag": "Public",
              "name": "\"com.microsoft:auth-failed\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionErrorNameMapper.\"com.microsoft:entity-already-exists\":member",
              "docComment": "/**\n * Error is thrown when an attempt is made to create an entity that already exists.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:entity-already-exists\" = "
                },
                {
                  "kind": "Content",
                  "text": "\"MessagingEntityAlreadyExistsError\""
                }
              ],
              "releaseTag": "Public",
              "name": "\"com.microsoft:entity-already-exists\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionErrorNameMapper.\"com.microsoft:entity-disabled\":member",
              "docComment": "/**\n * Error is thrown when trying to access/connect to a disabled messaging entity.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:entity-disabled\" = "
                },
                {
                  "kind": "Content",
                  "text": "\"MessagingEntityDisabledError\""
                }
              ],
              "releaseTag": "Public",
              "name": "\"com.microsoft:entity-disabled\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionErrorNameMapper.\"com.microsoft:message-lock-lost\":member",
              "docComment": "/**\n * Error is thrown when the lock on the message is lost.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:message-lock-lost\" = "
                },
                {
                  "kind": "Content",
                  "text": "\"MessageLockLostError\""
                }
              ],
              "releaseTag": "Public",
              "name": "\"com.microsoft:message-lock-lost\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionErrorNameMapper.\"com.microsoft:message-not-found\":member",
              "docComment": "/**\n * Error is thrown when the message is not found.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:message-not-found\" = "
                },
                {
                  "kind": "Content",
                  "text": "\"MessageNotFoundError\""
                }
              ],
              "releaseTag": "Public",
              "name": "\"com.microsoft:message-not-found\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionErrorNameMapper.\"com.microsoft:message-wait-timeout\":member",
              "docComment": "/**\n * Error is thrown when no new messages are received for the specified time.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:message-wait-timeout\" = "
                },
                {
                  "kind": "Content",
                  "text": "\"MessageWaitTimeout\""
                }
              ],
              "releaseTag": "Public",
              "name": "\"com.microsoft:message-wait-timeout\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionErrorNameMapper.\"com.microsoft:no-matching-subscription\":member",
              "docComment": "/**\n * Error is thrown when a matching subscription is not found.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:no-matching-subscription\" = "
                },
                {
                  "kind": "Content",
                  "text": "\"NoMatchingSubscriptionError\""
                }
              ],
              "releaseTag": "Public",
              "name": "\"com.microsoft:no-matching-subscription\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionErrorNameMapper.\"com.microsoft:operation-cancelled\":member",
              "docComment": "/**\n * Error is thrown when server cancels the operation due to an internal issue.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:operation-cancelled\" = "
                },
                {
                  "kind": "Content",
                  "text": "\"OperationCancelledError\""
                }
              ],
              "releaseTag": "Public",
              "name": "\"com.microsoft:operation-cancelled\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionErrorNameMapper.\"com.microsoft:partition-not-owned\":member",
              "docComment": "/**\n * Error is thrown when an attempt is made to access a parition that is not owned by the requesting entity.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:partition-not-owned\" = "
                },
                {
                  "kind": "Content",
                  "text": "\"PartitionNotOwnedError\""
                }
              ],
              "releaseTag": "Public",
              "name": "\"com.microsoft:partition-not-owned\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionErrorNameMapper.\"com.microsoft:precondition-failed\":member",
              "docComment": "/**\n * Error is thrown when a condition that should have been met in order to execute an operation was not.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:precondition-failed\" = "
                },
                {
                  "kind": "Content",
                  "text": "\"PreconditionFailedError\""
                }
              ],
              "releaseTag": "Public",
              "name": "\"com.microsoft:precondition-failed\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionErrorNameMapper.\"com.microsoft:publisher-revoked\":member",
              "docComment": "/**\n * Error is thrown when access to publisher has been revoked.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:publisher-revoked\" = "
                },
                {
                  "kind": "Content",
                  "text": "\"PublisherRevokedError\""
                }
              ],
              "releaseTag": "Public",
              "name": "\"com.microsoft:publisher-revoked\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionErrorNameMapper.\"com.microsoft:relay-not-found\":member",
              "docComment": "/**\n * Error is thrown when relay is not found.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:relay-not-found\" = "
                },
                {
                  "kind": "Content",
                  "text": "\"RelayNotFoundError\""
                }
              ],
              "releaseTag": "Public",
              "name": "\"com.microsoft:relay-not-found\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionErrorNameMapper.\"com.microsoft:server-busy\":member",
              "docComment": "/**\n * Error is thrown when the server is busy. Callers should wait a while and retry the operation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:server-busy\" = "
                },
                {
                  "kind": "Content",
                  "text": "\"ServerBusyError\""
                }
              ],
              "releaseTag": "Public",
              "name": "\"com.microsoft:server-busy\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionErrorNameMapper.\"com.microsoft:session-cannot-be-locked\":member",
              "docComment": "/**\n * Error is thrown when the Azure ServiceBus session cannot be locked.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:session-cannot-be-locked\" = "
                },
                {
                  "kind": "Content",
                  "text": "\"SessionCannotBeLockedError\""
                }
              ],
              "releaseTag": "Public",
              "name": "\"com.microsoft:session-cannot-be-locked\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionErrorNameMapper.\"com.microsoft:session-lock-lost\":member",
              "docComment": "/**\n * Error is thrown when the lock on the Azure ServiceBus session is lost.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:session-lock-lost\" = "
                },
                {
                  "kind": "Content",
                  "text": "\"SessionLockLostError\""
                }
              ],
              "releaseTag": "Public",
              "name": "\"com.microsoft:session-lock-lost\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionErrorNameMapper.\"com.microsoft:store-lock-lost\":member",
              "docComment": "/**\n * Error is thrown when the store lock is lost.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:store-lock-lost\" = "
                },
                {
                  "kind": "Content",
                  "text": "\"StoreLockLostError\""
                }
              ],
              "releaseTag": "Public",
              "name": "\"com.microsoft:store-lock-lost\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionErrorNameMapper.\"com.microsoft:timeout\":member",
              "docComment": "/**\n * Error is thrown when the service is unavailable. The operation should be retried.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:timeout\" = "
                },
                {
                  "kind": "Content",
                  "text": "\"ServiceUnavailableError\""
                }
              ],
              "releaseTag": "Public",
              "name": "\"com.microsoft:timeout\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionErrorNameMapper.\"system:error\":member",
              "docComment": "/**\n * Error is thrown when a low level system error is thrown by node.js. {@link https://nodejs.org/dist/latest-v8.x/docs/api/all.html#errors_class_system_error}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"system:error\" = "
                },
                {
                  "kind": "Content",
                  "text": "\"SystemError\""
                }
              ],
              "releaseTag": "Public",
              "name": "\"system:error\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "Enum",
          "canonicalReference": "@azure/core-amqp!ConditionStatusMapper:enum",
          "docComment": "/**\n * Maps the conditions to the numeric AMQP Response status codes.  @enum {ConditionStatusMapper}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum ConditionStatusMapper "
            }
          ],
          "releaseTag": "Public",
          "name": "ConditionStatusMapper",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionStatusMapper.\"amqp:link:message-size-exceeded\":member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"amqp:link:message-size-exceeded\" = "
                },
                {
                  "kind": "Content",
                  "text": "403"
                }
              ],
              "releaseTag": "Public",
              "name": "\"amqp:link:message-size-exceeded\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionStatusMapper.\"amqp:link:stolen\":member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"amqp:link:stolen\" = "
                },
                {
                  "kind": "Content",
                  "text": "410"
                }
              ],
              "releaseTag": "Public",
              "name": "\"amqp:link:stolen\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionStatusMapper.\"amqp:not-allowed\":member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"amqp:not-allowed\" = "
                },
                {
                  "kind": "Content",
                  "text": "400"
                }
              ],
              "releaseTag": "Public",
              "name": "\"amqp:not-allowed\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionStatusMapper.\"amqp:not-found\":member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"amqp:not-found\" = "
                },
                {
                  "kind": "Content",
                  "text": "404"
                }
              ],
              "releaseTag": "Public",
              "name": "\"amqp:not-found\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionStatusMapper.\"amqp:not-implemented\":member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"amqp:not-implemented\" = "
                },
                {
                  "kind": "Content",
                  "text": "501"
                }
              ],
              "releaseTag": "Public",
              "name": "\"amqp:not-implemented\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionStatusMapper.\"amqp:resource-limit-exceeded\":member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"amqp:resource-limit-exceeded\" = "
                },
                {
                  "kind": "Content",
                  "text": "403"
                }
              ],
              "releaseTag": "Public",
              "name": "\"amqp:resource-limit-exceeded\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionStatusMapper.\"amqp:unauthorized-access\":member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"amqp:unauthorized-access\" = "
                },
                {
                  "kind": "Content",
                  "text": "401"
                }
              ],
              "releaseTag": "Public",
              "name": "\"amqp:unauthorized-access\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionStatusMapper.\"com.microsoft:argument-error\":member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:argument-error\" = "
                },
                {
                  "kind": "Content",
                  "text": "400"
                }
              ],
              "releaseTag": "Public",
              "name": "\"com.microsoft:argument-error\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionStatusMapper.\"com.microsoft:argument-out-of-range\":member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:argument-out-of-range\" = "
                },
                {
                  "kind": "Content",
                  "text": "400"
                }
              ],
              "releaseTag": "Public",
              "name": "\"com.microsoft:argument-out-of-range\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionStatusMapper.\"com.microsoft:entity-already-exists\":member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:entity-already-exists\" = "
                },
                {
                  "kind": "Content",
                  "text": "409"
                }
              ],
              "releaseTag": "Public",
              "name": "\"com.microsoft:entity-already-exists\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionStatusMapper.\"com.microsoft:entity-disabled\":member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:entity-disabled\" = "
                },
                {
                  "kind": "Content",
                  "text": "400"
                }
              ],
              "releaseTag": "Public",
              "name": "\"com.microsoft:entity-disabled\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionStatusMapper.\"com.microsoft:message-lock-lost\":member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:message-lock-lost\" = "
                },
                {
                  "kind": "Content",
                  "text": "410"
                }
              ],
              "releaseTag": "Public",
              "name": "\"com.microsoft:message-lock-lost\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionStatusMapper.\"com.microsoft:no-matching-subscription\":member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:no-matching-subscription\" = "
                },
                {
                  "kind": "Content",
                  "text": "500"
                }
              ],
              "releaseTag": "Public",
              "name": "\"com.microsoft:no-matching-subscription\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionStatusMapper.\"com.microsoft:partition-not-owned\":member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:partition-not-owned\" = "
                },
                {
                  "kind": "Content",
                  "text": "410"
                }
              ],
              "releaseTag": "Public",
              "name": "\"com.microsoft:partition-not-owned\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionStatusMapper.\"com.microsoft:publisher-revoked\":member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:publisher-revoked\" = "
                },
                {
                  "kind": "Content",
                  "text": "401"
                }
              ],
              "releaseTag": "Public",
              "name": "\"com.microsoft:publisher-revoked\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionStatusMapper.\"com.microsoft:server-busy\":member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:server-busy\" = "
                },
                {
                  "kind": "Content",
                  "text": "503"
                }
              ],
              "releaseTag": "Public",
              "name": "\"com.microsoft:server-busy\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionStatusMapper.\"com.microsoft:session-cannot-be-locked\":member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:session-cannot-be-locked\" = "
                },
                {
                  "kind": "Content",
                  "text": "410"
                }
              ],
              "releaseTag": "Public",
              "name": "\"com.microsoft:session-cannot-be-locked\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionStatusMapper.\"com.microsoft:session-lock-lost\":member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:session-lock-lost\" = "
                },
                {
                  "kind": "Content",
                  "text": "410"
                }
              ],
              "releaseTag": "Public",
              "name": "\"com.microsoft:session-lock-lost\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionStatusMapper.\"com.microsoft:store-lock-lost\":member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:store-lock-lost\" = "
                },
                {
                  "kind": "Content",
                  "text": "410"
                }
              ],
              "releaseTag": "Public",
              "name": "\"com.microsoft:store-lock-lost\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ConditionStatusMapper.\"com.microsoft:timeout\":member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:timeout\" = "
                },
                {
                  "kind": "Content",
                  "text": "408"
                }
              ],
              "releaseTag": "Public",
              "name": "\"com.microsoft:timeout\"",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@azure/core-amqp!ConnectionConfig:interface",
          "docComment": "/**\n * Describes the connection config object that is created after parsing an EventHub or ServiceBus connection string.  @interface ConnectionConfig\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ConnectionConfig "
            }
          ],
          "releaseTag": "Public",
          "name": "ConnectionConfig",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!ConnectionConfig#connectionString:member",
              "docComment": "/**\n * @property {string} connectionString - The connection string.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "connectionString: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "connectionString",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!ConnectionConfig#endpoint:member",
              "docComment": "/**\n * @property {string} endpoint - The service bus endpoint \"sb://<yournamespace>.servicebus.windows.net/\".\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "endpoint: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "endpoint",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!ConnectionConfig#entityPath:member",
              "docComment": "/**\n * @property {string} entityPath - The name/path of the entity (hub/queue/topic name) to which the connection needs to happen.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "entityPath?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "entityPath",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!ConnectionConfig#host:member",
              "docComment": "/**\n * @property {string} host - The host \"<yournamespace>.servicebus.windows.net\".\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "host: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "host",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!ConnectionConfig#sharedAccessKey:member",
              "docComment": "/**\n * @property {string} sharedAccessKey - The secret value of the access key.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sharedAccessKey: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "sharedAccessKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!ConnectionConfig#sharedAccessKeyName:member",
              "docComment": "/**\n * @property {string} sharedAccessKeyName - The name of the access key.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sharedAccessKeyName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "sharedAccessKeyName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!ConnectionConfig#webSocket:member",
              "docComment": "/**\n * @property {WebSocketImpl} [webSocket] - The WebSocket constructor used to create an AMQP connection over a WebSocket. In browsers, the built-in WebSocket will be used by default. In Node, a TCP socket will be used if a WebSocket constructor is not provided.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "webSocket?: "
                },
                {
                  "kind": "Reference",
                  "text": "WebSocketImpl",
                  "canonicalReference": "rhea!WebSocketImpl:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "webSocket",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!ConnectionConfig#webSocketConstructorOptions:member",
              "docComment": "/**\n * @property {any} [webSocketConstructorOptions] - Options to be passed to the WebSocket constructor\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "webSocketConstructorOptions?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "webSocketConstructorOptions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!ConnectionConfig#webSocketEndpointPath:member",
              "docComment": "/**\n * @property {string} [webSocketEndpointPath] - The path for the endpoint that accepts an AMQP connection over WebSockets.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "webSocketEndpointPath?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "webSocketEndpointPath",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@azure/core-amqp!ConnectionConfig:namespace",
          "docComment": "/**\n * Describes the ConnectionConfig module  @module ConnectionConfig\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare namespace ConnectionConfig "
            }
          ],
          "releaseTag": "Public",
          "name": "ConnectionConfig",
          "members": [
            {
              "kind": "Function",
              "canonicalReference": "@azure/core-amqp!ConnectionConfig.create:function(1)",
              "docComment": "/**\n * Creates the connection config.\n *\n * @param  - {string} connectionString - The connection string for a given service like EventHub/ServiceBus.\n *\n * @param  - {string} [path] - The name/path of the entity (hub name) to which the connection needs to happen. This will override the EntityPath in the connectionString if present.\n *\n * @returns {ConnectionConfig} ConnectionConfig\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function create(connectionString: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", path?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ConnectionConfig",
                  "canonicalReference": "@azure/core-amqp!ConnectionConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "connectionString",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "path",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "create"
            },
            {
              "kind": "Function",
              "canonicalReference": "@azure/core-amqp!ConnectionConfig.validate:function(1)",
              "docComment": "/**\n * Validates the properties of connection config.\n *\n * @param  - {ConnectionConfig} config The connection config to be validated.\n *\n * @returns {void} void\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function validate(config: "
                },
                {
                  "kind": "Reference",
                  "text": "ConnectionConfig",
                  "canonicalReference": "@azure/core-amqp!ConnectionConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "ConnectionConfigOptions",
                  "canonicalReference": "@azure/core-amqp!ConnectionConfigOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "validate"
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@azure/core-amqp!ConnectionConfigOptions:interface",
          "docComment": "/**\n * Describes the options that can be provided while creating a connection config.  @interface ConnectionConfigOptions\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ConnectionConfigOptions "
            }
          ],
          "releaseTag": "Public",
          "name": "ConnectionConfigOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!ConnectionConfigOptions#isEntityPathRequired:member",
              "docComment": "/**\n * @property {boolean} [isEntityPathRequired] Indicates whether the entity path is required in the connection config.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isEntityPathRequired?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isEntityPathRequired",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@azure/core-amqp!ConnectionContextBase:interface",
          "docComment": "/**\n * @interface ConnectionContextBase Provides contextual information like the underlying amqp connection, cbs session, tokenProvider, Connection config, data transformer, etc.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ConnectionContextBase "
            }
          ],
          "releaseTag": "Public",
          "name": "ConnectionContextBase",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!ConnectionContextBase#cbsSession:member",
              "docComment": "/**\n * @property {CbsClient} cbsSession A reference to the cbs session ($cbs endpoint) on the underlying AMQP connection for the EventHub Client.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cbsSession: "
                },
                {
                  "kind": "Reference",
                  "text": "CbsClient",
                  "canonicalReference": "@azure/core-amqp!CbsClient:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "cbsSession",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!ConnectionContextBase#config:member",
              "docComment": "/**\n * @property {ConnectionConfig} config The EventHub connection config that is created after parsing the connection string.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly config: "
                },
                {
                  "kind": "Reference",
                  "text": "ConnectionConfig",
                  "canonicalReference": "@azure/core-amqp!ConnectionConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "config",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!ConnectionContextBase#connection:member",
              "docComment": "/**\n * @property {Connection} connection The underlying AMQP connection.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "connection: "
                },
                {
                  "kind": "Reference",
                  "text": "Connection",
                  "canonicalReference": "rhea-promise!Connection:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "connection",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!ConnectionContextBase#connectionId:member",
              "docComment": "/**\n * @property {string} connectionId The amqp connection id that uniquely identifies the connection within a process.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "connectionId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "connectionId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!ConnectionContextBase#connectionLock:member",
              "docComment": "/**\n * @property {string} connectionLock The unqiue lock name per connection that is used to acquire the lock for establishing an aqmp connection per client if one does not exist.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly connectionLock: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "connectionLock",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!ConnectionContextBase#dataTransformer:member",
              "docComment": "/**\n * @property {DataTransformer} dataTransformer A DataTransformer object that has methods named - encode Responsible for encoding the AMQP message before sending it on the wire. - decode Responsible for decoding the received AMQP message before passing it to the customer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dataTransformer: "
                },
                {
                  "kind": "Reference",
                  "text": "DataTransformer",
                  "canonicalReference": "@azure/core-amqp!DataTransformer:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "dataTransformer",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!ConnectionContextBase#negotiateClaimLock:member",
              "docComment": "/**\n * @property {string} negotiateClaimLock The unqiue lock name per connection that is used to acquire the lock for negotiating cbs claim by an entity on that connection.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly negotiateClaimLock: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "negotiateClaimLock",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!ConnectionContextBase#tokenCredential:member",
              "docComment": "/**\n * @property {SharedKeyCredential | TokenCredential} tokenCredential The credential to be used for getting tokens for authentication for the EventHub client.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly tokenCredential: "
                },
                {
                  "kind": "Reference",
                  "text": "SharedKeyCredential",
                  "canonicalReference": "@azure/core-amqp!SharedKeyCredential:class"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TokenCredential",
                  "canonicalReference": "@azure/core-auth!TokenCredential:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "tokenCredential",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!ConnectionContextBase#wasConnectionCloseCalled:member",
              "docComment": "/**\n * @property {boolean} wasConnectionCloseCalled Indicates whether the close() method was called on the connection object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "wasConnectionCloseCalled: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "wasConnectionCloseCalled",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@azure/core-amqp!ConnectionContextBase:namespace",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare module ConnectionContextBase "
            }
          ],
          "releaseTag": "Public",
          "name": "ConnectionContextBase",
          "members": [
            {
              "kind": "Function",
              "canonicalReference": "@azure/core-amqp!ConnectionContextBase.create:function(1)",
              "docComment": "/**\n * Creates the base connection context.\n *\n * @param  - {CreateConnectionContextBaseParameters} parameters Parameters to be provided to create the base connection context.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function create(parameters: "
                },
                {
                  "kind": "Reference",
                  "text": "CreateConnectionContextBaseParameters",
                  "canonicalReference": "@azure/core-amqp!CreateConnectionContextBaseParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ConnectionContextBase",
                  "canonicalReference": "@azure/core-amqp!ConnectionContextBase:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "parameters",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "create"
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@azure/core-amqp!ConnectionProperties:interface",
          "docComment": "/**\n * Defines the properties that need to be set while establishing the AMQP connection.  @interface ConnectionProperties\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ConnectionProperties "
            }
          ],
          "releaseTag": "Public",
          "name": "ConnectionProperties",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!ConnectionProperties#product:member",
              "docComment": "/**\n * @property {string} product The name of the product that will be populated as the AMQP connection property. Example: \"MSJSClient\".\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "product: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "product",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!ConnectionProperties#userAgent:member",
              "docComment": "/**\n * @property {string} userAgent The userAgent that needs to be set as the AMQP connection property. Example: `\"/js-service-bus\"` or `\"/js-event-hubs,/js-event-processor-host=1.0.0\"`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "userAgent: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "userAgent",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!ConnectionProperties#version:member",
              "docComment": "/**\n * @property {string} version The version of the package/sdk that is making the AMQP connection.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "version: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "version",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "@azure/core-amqp!Constants:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "Constants: "
            },
            {
              "kind": "Content",
              "text": "{\n    associatedLinkName: \"associated-link-name\";\n    partitionKey: \"x-opt-partition-key\";\n    sequenceNumber: \"x-opt-sequence-number\";\n    enqueueSequenceNumber: \"x-opt-enqueue-sequence-number\";\n    enqueuedTime: \"x-opt-enqueued-time\";\n    scheduledEnqueueTime: \"x-opt-scheduled-enqueue-time\";\n    offset: \"x-opt-offset\";\n    lockedUntil: \"x-opt-locked-until\";\n    partitionIdName: \"x-opt-partition-id\";\n    publisher: \"x-opt-publisher-name\";\n    viaPartitionKey: \"x-opt-via-partition-key\";\n    deadLetterSource: \"x-opt-deadletter-source\";\n    enqueuedTimeAnnotation: string;\n    offsetAnnotation: string;\n    sequenceNumberAnnotation: string;\n    guidSize: 16;\n    message: \"message\";\n    error: \"error\";\n    statusCode: \"status-code\";\n    statusDescription: \"status-description\";\n    errorCondition: \"error-condition\";\n    management: \"$management\";\n    partition: \"partition\";\n    partitionId: \"partitionId\";\n    readOperation: \"READ\";\n    TLS: \"tls\";\n    establishConnection: \"establishConnection\";\n    defaultConsumerGroup: \"$default\";\n    eventHub: \"eventhub\";\n    cbsEndpoint: \"$cbs\";\n    cbsReplyTo: \"cbs\";\n    operationPutToken: \"put-token\";\n    aadEventHubsAudience: \"https://eventhubs.azure.net/\";\n    aadEventHubsScope: \"https://eventhubs.azure.net//.default\";\n    aadServiceBusAudience: \"https://servicebus.azure.net/\";\n    aadServiceBusScope: \"https://servicebus.azure.net//.default\";\n    maxUserAgentLength: 512;\n    vendorString: \"com.microsoft\";\n    attachEpoch: string;\n    receiverIdentifierName: string;\n    enableReceiverRuntimeMetricName: string;\n    timespan: string;\n    uri: string;\n    dateTimeOffset: string;\n    sessionFilterName: string;\n    receiverError: \"receiver_error\";\n    senderError: \"sender_error\";\n    sessionError: \"session_error\";\n    connectionError: \"connection_error\";\n    defaultOperationTimeoutInMs: 60000;\n    managementRequestKey: \"managementRequest\";\n    negotiateCbsKey: \"negotiateCbs\";\n    negotiateClaim: \"negotiateClaim\";\n    ensureContainerAndBlob: \"ensureContainerAndBlob\";\n    defaultPrefetchCount: 1000;\n    reconnectLimit: 100;\n    maxMessageIdLength: 128;\n    maxPartitionKeyLength: 128;\n    maxSessionIdLength: 128;\n    pathDelimiter: \"/\";\n    ruleNameMaximumLength: 50;\n    maximumSqlFilterStatementLength: 1024;\n    maximumSqlRuleActionStatementLength: 1024;\n    maxDeadLetterReasonLength: 4096;\n    maxDurationValue: 922337203685477;\n    minDurationValue: -922337203685477;\n    maxAbsoluteExpiryTime: number;\n    aadTokenValidityMarginInMs: 5000;\n    connectionReconnectDelay: 300;\n    defaultMaxRetries: 3;\n    defaultMaxRetriesForConnection: 150;\n    defaultDelayBetweenOperationRetriesInMs: 30000;\n    defaultMaxDelayForExponentialRetryInMs: 90000;\n    receiverSettleMode: \"receiver-settle-mode\";\n    dispositionStatus: \"disposition-status\";\n    fromSequenceNumber: \"from-sequence-number\";\n    messageCount: \"message-count\";\n    lockTokens: \"lock-tokens\";\n    messageIdMapKey: \"message-id\";\n    sequenceNumberMapKey: \"sequence-number\";\n    lockTokenMapKey: \"lock-token\";\n    sessionIdMapKey: \"session-id\";\n    sequenceNumbers: \"sequence-numbers\";\n    deadLetterReason: \"deadletter-reason\";\n    deadLetterDescription: \"deadletter-description\";\n    propertiesToModify: \"properties-to-modify\";\n    deadLetterName: \"com.microsoft:dead-letter\";\n    trackingId: \"com.microsoft:tracking-id\";\n    serverTimeout: \"com.microsoft:server-timeout\";\n    operations: {\n        putToken: string;\n        read: string;\n        cancelScheduledMessage: string;\n        scheduleMessage: string;\n        renewLock: string;\n        peekMessage: string;\n        receiveBySequenceNumber: string;\n        updateDisposition: string;\n        renewSessionLock: string;\n        setSessionState: string;\n        getSessionState: string;\n        enumerateSessions: string;\n        addRule: string;\n        removeRule: string;\n        enumerateRules: string;\n    };\n    descriptorCodes: {\n        ruleDescriptionList: number;\n        sqlFilterList: number;\n        correlationFilterList: number;\n        sqlRuleActionList: number;\n        trueFilterList: number;\n        falseFilterList: number;\n    };\n}"
            }
          ],
          "releaseTag": "Public",
          "name": "Constants",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@azure/core-amqp!CreateConnectionContextBaseParameters:interface",
          "docComment": "/**\n * Describes the parameters that can be provided to create the base connection context.  @interface CreateConnectionContextBaseParameters\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CreateConnectionContextBaseParameters "
            }
          ],
          "releaseTag": "Public",
          "name": "CreateConnectionContextBaseParameters",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!CreateConnectionContextBaseParameters#config:member",
              "docComment": "/**\n * @property {ConnectionConfig} config The connection config that is created by parsing the connection string.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "config: "
                },
                {
                  "kind": "Reference",
                  "text": "ConnectionConfig",
                  "canonicalReference": "@azure/core-amqp!ConnectionConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "config",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!CreateConnectionContextBaseParameters#connectionProperties:member",
              "docComment": "/**\n * @property {ConnectionProperties} connectionProperties Properties to be provided while creating the AMQP connection.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "connectionProperties: "
                },
                {
                  "kind": "Reference",
                  "text": "ConnectionProperties",
                  "canonicalReference": "@azure/core-amqp!ConnectionProperties:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "connectionProperties",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!CreateConnectionContextBaseParameters#dataTransformer:member",
              "docComment": "/**\n * @property {DataTransformer} [dataTransformer] The datatransformer to be used for encoding and decoding messages. Default value: DefaultDataTransformer\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dataTransformer?: "
                },
                {
                  "kind": "Reference",
                  "text": "DataTransformer",
                  "canonicalReference": "@azure/core-amqp!DataTransformer:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "dataTransformer",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!CreateConnectionContextBaseParameters#isEntityPathRequired:member",
              "docComment": "/**\n * @property {boolean} [isEntityPathRequired] Determines whether entity path should be a part of the connection config. If `true` it must be present, `false` otherwise. Default value false.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isEntityPathRequired?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isEntityPathRequired",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!CreateConnectionContextBaseParameters#operationTimeoutInMs:member",
              "docComment": "/**\n * @property {number} [operationTimeoutInMs] - The duration in which the promise should complete (resolve/reject). If it is not completed, then the Promise will be rejected after timeout occurs. Default: `60000 milliseconds`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "operationTimeoutInMs?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "operationTimeoutInMs",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!CreateConnectionContextBaseParameters#tokenCredential:member",
              "docComment": "/**\n * @property {SharedKeyCredential | TokenCredential} [tokenCredential] The credential to be used for Authentication. Default value: SharedKeyCredentials.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tokenCredential?: "
                },
                {
                  "kind": "Reference",
                  "text": "SharedKeyCredential",
                  "canonicalReference": "@azure/core-amqp!SharedKeyCredential:class"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TokenCredential",
                  "canonicalReference": "@azure/core-auth!TokenCredential:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "tokenCredential",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@azure/core-amqp!DataTransformer:interface",
          "docComment": "/**\n * Describes the transformations that can be performed to encode/decode the data before sending it on (or receiving it from) the wire.  @interface DataTransformer\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DataTransformer "
            }
          ],
          "releaseTag": "Public",
          "name": "DataTransformer",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!DataTransformer#decode:member",
              "docComment": "/**\n * @property {Function} decode A function that takes the body property from an AMQP message and returns the decoded message body. If it cannot decode the body then it returns the body as-is.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "decode: "
                },
                {
                  "kind": "Content",
                  "text": "(body: any) => any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "decode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!DataTransformer#encode:member",
              "docComment": "/**\n * @property {Function} encode A function that takes the body property from an EventData object and returns an encoded body (some form of AMQP type).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "encode: "
                },
                {
                  "kind": "Content",
                  "text": "(body: any) => any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "encode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@azure/core-amqp!DefaultDataTransformer:class",
          "docComment": "/**\n * The default data transformer that will be used by the Azure SDK.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DefaultDataTransformer implements "
            },
            {
              "kind": "Reference",
              "text": "DataTransformer",
              "canonicalReference": "@azure/core-amqp!DataTransformer:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "DefaultDataTransformer",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@azure/core-amqp!DefaultDataTransformer#decode:member(1)",
              "docComment": "/**\n * @property {Function} [decode] A function that takes the body property from an AMQP message (an AMQP Data type (data section in rhea terms)) and returns the decoded message body. If it cannot decode the body then it returns the body as-is.\n *\n * @param  - {DataSection} body The AMQP message body  @return {*} decoded body or the given body as-is.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "decode(body: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "body",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "decode"
            },
            {
              "kind": "Method",
              "canonicalReference": "@azure/core-amqp!DefaultDataTransformer#encode:member(1)",
              "docComment": "/**\n * A function that takes the body property from an EventData object and returns an encoded body (some form of AMQP type).\n *\n * @param  - {*} body The AMQP message body  @return {DataSection} encodedBody - The encoded AMQP message body as an AMQP Data type (data section in rhea terms). Section object with following properties: - typecode: 117 (0x75) - content: The given AMQP message body as a Buffer. - multiple: true | undefined.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "encode(body: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "body",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "encode"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "@azure/core-amqp!defaultLock:var",
          "docComment": "/**\n * @constant {AsyncLock} defaultLock The async lock instance with default settings.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "defaultLock: "
            },
            {
              "kind": "Reference",
              "text": "AsyncLock",
              "canonicalReference": "@types/async-lock!~AsyncLock:class"
            }
          ],
          "releaseTag": "Public",
          "name": "defaultLock",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@azure/core-amqp!delay:function(1)",
          "docComment": "/**\n * A wrapper for setTimeout that resolves a promise after t milliseconds.\n *\n * @param  - {number} delayInMs - The number of milliseconds to be delayed.\n *\n * @param  - {AbortSignalLike} abortSignal - The abortSignal associated with containing operation.\n *\n * @param  - {string} abortErrorMsg - The abort error message associated with containing operation.\n *\n * @param  - {T} value - The value to be resolved with after a timeout of t milliseconds.\n *\n * @returns {Promise<T>} - Resolved promise\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function delay<T>(delayInMs: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", abortSignal?: "
            },
            {
              "kind": "Reference",
              "text": "AbortSignalLike",
              "canonicalReference": "@azure/abort-controller!AbortSignalLike:interface"
            },
            {
              "kind": "Content",
              "text": ", abortErrorMsg?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", value?: "
            },
            {
              "kind": "Content",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 11
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "delayInMs",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "abortSignal",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "parameterName": "abortErrorMsg",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            },
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "delay"
        },
        {
          "kind": "Enum",
          "canonicalReference": "@azure/core-amqp!ErrorNameConditionMapper:enum",
          "docComment": "/**\n * Maps the Error names to the amqp error conditions.  @enum {ErrorNameConditionMapper}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum ErrorNameConditionMapper "
            }
          ],
          "releaseTag": "Public",
          "name": "ErrorNameConditionMapper",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ErrorNameConditionMapper.AddressAlreadyInUseError:member",
              "docComment": "/**\n * Error is thrown when the address is already in use.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "AddressAlreadyInUseError = "
                },
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:address-already-in-use\""
                }
              ],
              "releaseTag": "Public",
              "name": "AddressAlreadyInUseError",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ErrorNameConditionMapper.ArgumentError:member",
              "docComment": "/**\n * Error is thrown when an incorrect argument was received.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ArgumentError = "
                },
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:argument-error\""
                }
              ],
              "releaseTag": "Public",
              "name": "ArgumentError",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ErrorNameConditionMapper.ArgumentOutOfRangeError:member",
              "docComment": "/**\n * Error is thrown when an argument has a value that is out of the admissible range.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ArgumentOutOfRangeError = "
                },
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:argument-out-of-range\""
                }
              ],
              "releaseTag": "Public",
              "name": "ArgumentOutOfRangeError",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ErrorNameConditionMapper.ConnectionForcedError:member",
              "docComment": "/**\n * Error is thrown when an operator intervened to close the connection for some reason.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ConnectionForcedError = "
                },
                {
                  "kind": "Content",
                  "text": "\"amqp:connection:forced\""
                }
              ],
              "releaseTag": "Public",
              "name": "ConnectionForcedError",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ErrorNameConditionMapper.ConnectionRedirectError:member",
              "docComment": "/**\n * Error is thrown when the container is no longer available on the current connection.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ConnectionRedirectError = "
                },
                {
                  "kind": "Content",
                  "text": "\"amqp:connection:redirect\""
                }
              ],
              "releaseTag": "Public",
              "name": "ConnectionRedirectError",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ErrorNameConditionMapper.DecodeError:member",
              "docComment": "/**\n * Error is thrown when data could not be decoded.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DecodeError = "
                },
                {
                  "kind": "Content",
                  "text": "\"amqp:decode-error\""
                }
              ],
              "releaseTag": "Public",
              "name": "DecodeError",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ErrorNameConditionMapper.DetachForcedError:member",
              "docComment": "/**\n * Error is thrown when an operator intervened to detach for some reason.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DetachForcedError = "
                },
                {
                  "kind": "Content",
                  "text": "\"amqp:link:detach-forced\""
                }
              ],
              "releaseTag": "Public",
              "name": "DetachForcedError",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ErrorNameConditionMapper.ErrantLinkError:member",
              "docComment": "/**\n * Error is thrown when input was received for a link that was detached with an error.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ErrantLinkError = "
                },
                {
                  "kind": "Content",
                  "text": "\"amqp:session:errant-link\""
                }
              ],
              "releaseTag": "Public",
              "name": "ErrantLinkError",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ErrorNameConditionMapper.FrameSizeTooSmallError:member",
              "docComment": "/**\n * Error is thrown when the peer cannot send a frame because the smallest encoding of the performative with the currently valid values would be too large to fit within a frame of the agreed maximum frame size.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "FrameSizeTooSmallError = "
                },
                {
                  "kind": "Content",
                  "text": "\"amqp:frame-size-too-small\""
                }
              ],
              "releaseTag": "Public",
              "name": "FrameSizeTooSmallError",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ErrorNameConditionMapper.FramingError:member",
              "docComment": "/**\n * Error is thrown when a valid frame header cannot be formed from the incoming byte stream.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "FramingError = "
                },
                {
                  "kind": "Content",
                  "text": "\"amqp:connection:framing-error\""
                }
              ],
              "releaseTag": "Public",
              "name": "FramingError",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ErrorNameConditionMapper.HandleInUseError:member",
              "docComment": "/**\n * Error is thrown when an attach was received using a handle that is already in use for an attached link.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "HandleInUseError = "
                },
                {
                  "kind": "Content",
                  "text": "\"amqp:session:handle-in-use\""
                }
              ],
              "releaseTag": "Public",
              "name": "HandleInUseError",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ErrorNameConditionMapper.IllegalStateError:member",
              "docComment": "/**\n * Error is thrown when the peer sent a frame that is not permitted in the current state.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "IllegalStateError = "
                },
                {
                  "kind": "Content",
                  "text": "\"amqp:illegal-state\""
                }
              ],
              "releaseTag": "Public",
              "name": "IllegalStateError",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ErrorNameConditionMapper.InternalServerError:member",
              "docComment": "/**\n * Error is thrown when an internal server error occured. You may have found a bug?\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "InternalServerError = "
                },
                {
                  "kind": "Content",
                  "text": "\"amqp:internal-error\""
                }
              ],
              "releaseTag": "Public",
              "name": "InternalServerError",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ErrorNameConditionMapper.InvalidFieldError:member",
              "docComment": "/**\n * Error is thrown when an invalid field was passed in a frame body, and the operation could not proceed.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "InvalidFieldError = "
                },
                {
                  "kind": "Content",
                  "text": "\"amqp:invalid-field\""
                }
              ],
              "releaseTag": "Public",
              "name": "InvalidFieldError",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ErrorNameConditionMapper.InvalidOperationError:member",
              "docComment": "/**\n * Error is thrown when an operation is attempted but is not allowed.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "InvalidOperationError = "
                },
                {
                  "kind": "Content",
                  "text": "\"amqp:not-allowed\""
                }
              ],
              "releaseTag": "Public",
              "name": "InvalidOperationError",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ErrorNameConditionMapper.LinkRedirectError:member",
              "docComment": "/**\n * Error is thrown when the address provided cannot be resolved to a terminus at the current container.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "LinkRedirectError = "
                },
                {
                  "kind": "Content",
                  "text": "\"amqp:link:redirect\""
                }
              ],
              "releaseTag": "Public",
              "name": "LinkRedirectError",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ErrorNameConditionMapper.MessageLockLostError:member",
              "docComment": "/**\n * Error is thrown when the lock on the message is lost.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MessageLockLostError = "
                },
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:message-lock-lost\""
                }
              ],
              "releaseTag": "Public",
              "name": "MessageLockLostError",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ErrorNameConditionMapper.MessageNotFoundError:member",
              "docComment": "/**\n * Error is thrown when message is not found.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MessageNotFoundError = "
                },
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:message-not-found\""
                }
              ],
              "releaseTag": "Public",
              "name": "MessageNotFoundError",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ErrorNameConditionMapper.MessageTooLargeError:member",
              "docComment": "/**\n * Error is thrown when the message sent is too large: the maximum size is 256Kb.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MessageTooLargeError = "
                },
                {
                  "kind": "Content",
                  "text": "\"amqp:link:message-size-exceeded\""
                }
              ],
              "releaseTag": "Public",
              "name": "MessageTooLargeError",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ErrorNameConditionMapper.MessageWaitTimeout:member",
              "docComment": "/**\n * Error is thrown when no new messages are received for the specified time.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MessageWaitTimeout = "
                },
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:message-wait-timeout\""
                }
              ],
              "releaseTag": "Public",
              "name": "MessageWaitTimeout",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ErrorNameConditionMapper.MessagingEntityAlreadyExistsError:member",
              "docComment": "/**\n * Error is thrown when an attempt is made to create an entity that already exists.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MessagingEntityAlreadyExistsError = "
                },
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:entity-already-exists\""
                }
              ],
              "releaseTag": "Public",
              "name": "MessagingEntityAlreadyExistsError",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ErrorNameConditionMapper.MessagingEntityDisabledError:member",
              "docComment": "/**\n * Error is thrown when trying to access/connect to a disabled messaging entity.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MessagingEntityDisabledError = "
                },
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:entity-disabled\""
                }
              ],
              "releaseTag": "Public",
              "name": "MessagingEntityDisabledError",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ErrorNameConditionMapper.NoMatchingSubscriptionError:member",
              "docComment": "/**\n * Error is thrown when a matching subscription is not found.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "NoMatchingSubscriptionError = "
                },
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:no-matching-subscription\""
                }
              ],
              "releaseTag": "Public",
              "name": "NoMatchingSubscriptionError",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ErrorNameConditionMapper.NotImplementedError:member",
              "docComment": "/**\n * Error is thrown when a feature is not implemented yet but the placeholder is present.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "NotImplementedError = "
                },
                {
                  "kind": "Content",
                  "text": "\"amqp:not-implemented\""
                }
              ],
              "releaseTag": "Public",
              "name": "NotImplementedError",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ErrorNameConditionMapper.OperationCancelledError:member",
              "docComment": "/**\n * Error is thrown when server cancels the operation due to an internal issue.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "OperationCancelledError = "
                },
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:operation-cancelled\""
                }
              ],
              "releaseTag": "Public",
              "name": "OperationCancelledError",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ErrorNameConditionMapper.PartitionNotOwnedError:member",
              "docComment": "/**\n * Error is thrown when an attempt is made to access a parition that is not owned by the requesting entity.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "PartitionNotOwnedError = "
                },
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:partition-not-owned\""
                }
              ],
              "releaseTag": "Public",
              "name": "PartitionNotOwnedError",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ErrorNameConditionMapper.PreconditionFailedError:member",
              "docComment": "/**\n * Error is thrown when a condition that should have been met in order to execute an operation was not.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "PreconditionFailedError = "
                },
                {
                  "kind": "Content",
                  "text": "\"amqp:precondition-failed\""
                }
              ],
              "releaseTag": "Public",
              "name": "PreconditionFailedError",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ErrorNameConditionMapper.PublisherRevokedError:member",
              "docComment": "/**\n * Error is thrown when access to publisher has been revoked.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "PublisherRevokedError = "
                },
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:publisher-revoked\""
                }
              ],
              "releaseTag": "Public",
              "name": "PublisherRevokedError",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ErrorNameConditionMapper.QuotaExceededError:member",
              "docComment": "/**\n * Error is thrown the the Azure EventHub/ServiceBus quota has been exceeded. Quotas are reset periodically, this operation will have to wait until then. The messaging entity has reached its maximum allowable size. This can happen if the maximum number of receivers (which is 5) has already been opened on a per-consumer group level.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "QuotaExceededError = "
                },
                {
                  "kind": "Content",
                  "text": "\"amqp:resource-limit-exceeded\""
                }
              ],
              "releaseTag": "Public",
              "name": "QuotaExceededError",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ErrorNameConditionMapper.ReceiverDisconnectedError:member",
              "docComment": "/**\n * Error is thrown when two or more instances connect to the same partition with different epoch values.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ReceiverDisconnectedError = "
                },
                {
                  "kind": "Content",
                  "text": "\"amqp:link:stolen\""
                }
              ],
              "releaseTag": "Public",
              "name": "ReceiverDisconnectedError",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ErrorNameConditionMapper.RelayNotFoundError:member",
              "docComment": "/**\n * Error is thrown when relay is not found.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "RelayNotFoundError = "
                },
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:relay-not-found\""
                }
              ],
              "releaseTag": "Public",
              "name": "RelayNotFoundError",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ErrorNameConditionMapper.ResourceDeletedError:member",
              "docComment": "/**\n * Error is thrown when a server entity the client is working with has been deleted.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ResourceDeletedError = "
                },
                {
                  "kind": "Content",
                  "text": "\"amqp:resource-deleted\""
                }
              ],
              "releaseTag": "Public",
              "name": "ResourceDeletedError",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ErrorNameConditionMapper.ResourceLockedError:member",
              "docComment": "/**\n * Error is thrown when the client attempted to work with a server entity to which it has no access because another client is working with it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ResourceLockedError = "
                },
                {
                  "kind": "Content",
                  "text": "\"amqp:resource-locked\""
                }
              ],
              "releaseTag": "Public",
              "name": "ResourceLockedError",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ErrorNameConditionMapper.SenderBusyError:member",
              "docComment": "/**\n * Error is thrown when the client sender does not have enough link credits to send the message.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SenderBusyError = "
                },
                {
                  "kind": "Content",
                  "text": "\"client.sender:not-enough-link-credit\""
                }
              ],
              "releaseTag": "Public",
              "name": "SenderBusyError",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ErrorNameConditionMapper.ServerBusyError:member",
              "docComment": "/**\n * Error is thrown when the server is busy. Callers should wait a while and retry the operation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ServerBusyError = "
                },
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:server-busy\""
                }
              ],
              "releaseTag": "Public",
              "name": "ServerBusyError",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ErrorNameConditionMapper.ServiceCommunicationError:member",
              "docComment": "/**\n * Error for signaling general communication errors related to messaging operations.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ServiceCommunicationError = "
                },
                {
                  "kind": "Content",
                  "text": "\"amqp:not-found\""
                }
              ],
              "releaseTag": "Public",
              "name": "ServiceCommunicationError",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ErrorNameConditionMapper.ServiceUnavailableError:member",
              "docComment": "/**\n * Error is thrown when the service is unavailable. The operation should be retried.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ServiceUnavailableError = "
                },
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:timeout\""
                }
              ],
              "releaseTag": "Public",
              "name": "ServiceUnavailableError",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ErrorNameConditionMapper.SessionCannotBeLockedError:member",
              "docComment": "/**\n * Error is thrown when the Azure ServiceBus session cannot be locked.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SessionCannotBeLockedError = "
                },
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:session-cannot-be-locked\""
                }
              ],
              "releaseTag": "Public",
              "name": "SessionCannotBeLockedError",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ErrorNameConditionMapper.SessionLockLostError:member",
              "docComment": "/**\n * Error is thrown when the lock on the Azure ServiceBus session is lost.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SessionLockLostError = "
                },
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:session-lock-lost\""
                }
              ],
              "releaseTag": "Public",
              "name": "SessionLockLostError",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ErrorNameConditionMapper.SessionWindowViolationError:member",
              "docComment": "/**\n * Error is thrown when the peer violated incoming window for the session.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SessionWindowViolationError = "
                },
                {
                  "kind": "Content",
                  "text": "\"amqp:session:window-violation\""
                }
              ],
              "releaseTag": "Public",
              "name": "SessionWindowViolationError",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ErrorNameConditionMapper.StoreLockLostError:member",
              "docComment": "/**\n * Error is thrown when the store lock is lost.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "StoreLockLostError = "
                },
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:store-lock-lost\""
                }
              ],
              "releaseTag": "Public",
              "name": "StoreLockLostError",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ErrorNameConditionMapper.SystemError:member",
              "docComment": "/**\n * Error is thrown when a low level system error is thrown by node.js. {@link https://nodejs.org/api/errors.html#errors_class_systemerror}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SystemError = "
                },
                {
                  "kind": "Content",
                  "text": "\"system:error\""
                }
              ],
              "releaseTag": "Public",
              "name": "SystemError",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ErrorNameConditionMapper.TransferLimitExceededError:member",
              "docComment": "/**\n * Error is thrown when the peer sent more message transfers than currently allowed on the link.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "TransferLimitExceededError = "
                },
                {
                  "kind": "Content",
                  "text": "\"amqp:link:transfer-limit-exceeded\""
                }
              ],
              "releaseTag": "Public",
              "name": "TransferLimitExceededError",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ErrorNameConditionMapper.UnattachedHandleError:member",
              "docComment": "/**\n * Error is thrown when a frame (other than attach) was received referencing a handle which is not currently in use of an attached link.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "UnattachedHandleError = "
                },
                {
                  "kind": "Content",
                  "text": "\"amqp:session:unattached-handle\""
                }
              ],
              "releaseTag": "Public",
              "name": "UnattachedHandleError",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!ErrorNameConditionMapper.UnauthorizedError:member",
              "docComment": "/**\n * Error is thrown when the connection parameters are wrong and the server refused the connection.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "UnauthorizedError = "
                },
                {
                  "kind": "Content",
                  "text": "\"amqp:unauthorized-access\""
                }
              ],
              "releaseTag": "Public",
              "name": "UnauthorizedError",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@azure/core-amqp!EventHubConnectionConfig:interface",
          "docComment": "/**\n * Describes the connection config object that is created after parsing an EventHub connection string. It also provides some convenience methods for getting the address and audience for different entities.  @interface EventHubConnectionConfig\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface EventHubConnectionConfig extends "
            },
            {
              "kind": "Reference",
              "text": "ConnectionConfig",
              "canonicalReference": "@azure/core-amqp!ConnectionConfig:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "EventHubConnectionConfig",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!EventHubConnectionConfig#entityPath:member",
              "docComment": "/**\n * @property {string} entityPath - The name/path of the entity (event hub name) to which the connection needs to happen.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "entityPath: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "entityPath",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@azure/core-amqp!EventHubConnectionConfig#getManagementAddress:member(1)",
              "docComment": "/**\n * Provides the EventHub Management address. - `\"<hub-name>/$management\"`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getManagementAddress(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getManagementAddress"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@azure/core-amqp!EventHubConnectionConfig#getManagementAudience:member(1)",
              "docComment": "/**\n * Provides the EventHub Management audience. - `\"sb://<your-namespace>.servicebus.windows.net/<hub-name>/$management\"`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getManagementAudience(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getManagementAudience"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@azure/core-amqp!EventHubConnectionConfig#getReceiverAddress:member(1)",
              "docComment": "/**\n * Provides the EventHub Receiver address: - `\"<hub-name>/ConsumerGroups/<consumer-group-name>/Partitions/<partition-id>\"`\n *\n * @param  - partitionId The partitionId in the EventHub from which messages will be received.\n *\n * @param  - consumergroup The consumergoup in the EventHub from which the messages will be received. Default: `$default`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getReceiverAddress(partitionId: "
                },
                {
                  "kind": "Content",
                  "text": "string | number"
                },
                {
                  "kind": "Content",
                  "text": ", consumergroup?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "partitionId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "consumergroup",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getReceiverAddress"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@azure/core-amqp!EventHubConnectionConfig#getReceiverAudience:member(1)",
              "docComment": "/**\n * Provides the EventHub Receiver audience. - `\"sb://<your-namespace>.servicebus.windows.net/<hub-name>/ConsumerGroups/<consumer-group-name>/Partitions/<partition-id>\"`\n *\n * @param  - partitionId The partitionId in the EventHub from which messages will be received.\n *\n * @param  - consumergroup The consumergoup in the EventHub from which the messages will be received. Default: `$default`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getReceiverAudience(partitionId: "
                },
                {
                  "kind": "Content",
                  "text": "string | number"
                },
                {
                  "kind": "Content",
                  "text": ", consumergroup?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "partitionId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "consumergroup",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getReceiverAudience"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@azure/core-amqp!EventHubConnectionConfig#getSenderAddress:member(1)",
              "docComment": "/**\n * Provides the EventHub Sender address in one of the following forms based on the input: - `\"<hubName>\"` - `\"<hubName>/Partitions/<partitionId>\"`\n *\n * @param  - partitionId The partitionId in the EventHub to which messages will be sent.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSenderAddress(partitionId?: "
                },
                {
                  "kind": "Content",
                  "text": "string | number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "partitionId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "getSenderAddress"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@azure/core-amqp!EventHubConnectionConfig#getSenderAudience:member(1)",
              "docComment": "/**\n * Provides the EventHub Sender audience in one of the following forms based on the input: - `\"sb://<yournamespace>.servicebus.windows.net/<hubName>\"` - `\"sb://<yournamespace>.servicebus.windows.net/<hubName>/Partitions/<partitionId>\"`\n *\n * @param  - partitionId The partitionId in the EventHub to which messages will be sent.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSenderAudience(partitionId?: "
                },
                {
                  "kind": "Content",
                  "text": "string | number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "partitionId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "getSenderAudience"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@azure/core-amqp!EventHubConnectionConfig:namespace",
          "docComment": "/**\n * Describes the connection config object that is created after parsing an EventHub connection string. It also provides some convenience methods for getting the address and audience for different entities.  @module EventHubConnectionConfig\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare module EventHubConnectionConfig "
            }
          ],
          "releaseTag": "Public",
          "name": "EventHubConnectionConfig",
          "members": [
            {
              "kind": "Function",
              "canonicalReference": "@azure/core-amqp!EventHubConnectionConfig.create:function(1)",
              "docComment": "/**\n * Creates the connection config.\n *\n * @param  - {string} connectionString - The connection string for a given service like EventHub/ServiceBus.\n *\n * @param  - {string} [path] - The name/path of the entity (hub name) to which the connection needs to happen. This will override the EntityPath in the connectionString if present.\n *\n * @returns {EventHubConnectionConfig} EventHubConnectionConfig\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function create(connectionString: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", path?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "EventHubConnectionConfig",
                  "canonicalReference": "@azure/core-amqp!EventHubConnectionConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "connectionString",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "path",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "create"
            },
            {
              "kind": "Function",
              "canonicalReference": "@azure/core-amqp!EventHubConnectionConfig.createFromConnectionConfig:function(1)",
              "docComment": "/**\n * Creates an EventHubConnectionConfig from the provided base ConnectionConfig.\n *\n * @param  - config The base connection config from which the EventHubConnectionConfig needs to be created.\n *\n * @returns EventHubConnectionConfig\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function createFromConnectionConfig(config: "
                },
                {
                  "kind": "Reference",
                  "text": "ConnectionConfig",
                  "canonicalReference": "@azure/core-amqp!ConnectionConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "EventHubConnectionConfig",
                  "canonicalReference": "@azure/core-amqp!EventHubConnectionConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "createFromConnectionConfig"
            },
            {
              "kind": "Function",
              "canonicalReference": "@azure/core-amqp!EventHubConnectionConfig.validate:function(1)",
              "docComment": "/**\n * Validates the properties of connection config.\n *\n * @param  - {ConnectionConfig} config The connection config to be validated.\n *\n * @returns {void} void\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function validate(config: "
                },
                {
                  "kind": "Reference",
                  "text": "EventHubConnectionConfig",
                  "canonicalReference": "@azure/core-amqp!EventHubConnectionConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "validate"
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@azure/core-amqp!EventHubConnectionStringModel:interface",
          "docComment": "/**\n * Describes the eventhub connection string model.  @interface EventHubConnectionStringModel\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface EventHubConnectionStringModel "
            }
          ],
          "releaseTag": "Public",
          "name": "EventHubConnectionStringModel",
          "members": [
            {
              "kind": "IndexSignature",
              "canonicalReference": "@azure/core-amqp!EventHubConnectionStringModel:index(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "[x: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!EventHubConnectionStringModel#Endpoint:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Endpoint: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "Endpoint",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!EventHubConnectionStringModel#EntityPath:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "EntityPath?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "EntityPath",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!EventHubConnectionStringModel#SharedAccessKey:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SharedAccessKey: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "SharedAccessKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!EventHubConnectionStringModel#SharedAccessKeyName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SharedAccessKeyName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "SharedAccessKeyName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@azure/core-amqp!executePromisesSequentially:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function executePromisesSequentially(promiseFactories: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<any>"
            },
            {
              "kind": "Content",
              "text": ", kickstart?: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<any>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 6,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "promiseFactories",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "parameterName": "kickstart",
              "parameterTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            }
          ],
          "name": "executePromisesSequentially"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@azure/core-amqp!Func:type",
          "docComment": "/**\n * Type declaration for a Function type where T is the input to the function and V is the output of the function.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type Func<T, V> = "
            },
            {
              "kind": "Content",
              "text": "(a: T) => V"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "Func",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "V",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@azure/core-amqp!getNewAsyncLock:function(1)",
          "docComment": "/**\n * Gets a new instance of the async lock with desired settings.\n *\n * @param  - {AsyncLockOptions} [options] The async lock options.\n *\n * @returns {AsyncLock} AsyncLock\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getNewAsyncLock(options?: "
            },
            {
              "kind": "Reference",
              "text": "AsyncLockOptions",
              "canonicalReference": "@azure/core-amqp!AsyncLockOptions:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "AsyncLock",
              "canonicalReference": "@types/async-lock!~AsyncLock:class"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "options",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "getNewAsyncLock"
        },
        {
          "kind": "Interface",
          "canonicalReference": "@azure/core-amqp!IotHubConnectionConfig:interface",
          "docComment": "/**\n * @interface IotHubConnectionConfig  @ignore\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IotHubConnectionConfig "
            }
          ],
          "releaseTag": "Public",
          "name": "IotHubConnectionConfig",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!IotHubConnectionConfig#connectionString:member",
              "docComment": "/**\n * @property {string} connectionString - The IotHub connection string.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "connectionString: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "connectionString",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!IotHubConnectionConfig#deviceId:member",
              "docComment": "/**\n * @property {string} [deviceId] - The unique device identifier.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "deviceId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "deviceId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!IotHubConnectionConfig#entityPath:member",
              "docComment": "/**\n * @property {string} entityPath - The name/path of the entity to which the connection needs to happen.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "entityPath: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "entityPath",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!IotHubConnectionConfig#host:member",
              "docComment": "/**\n * @property {string} host - The host `\"<yournamespace>\"`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "host: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "host",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!IotHubConnectionConfig#hostName:member",
              "docComment": "/**\n * @property {string} endpoint - The iothub endpoint `\"<iothub-namespace>.azure-devices.net\"`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hostName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "hostName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!IotHubConnectionConfig#sharedAccessKey:member",
              "docComment": "/**\n * @property {string} sharedAccessKey - The secret value of the access key.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sharedAccessKey: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "sharedAccessKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!IotHubConnectionConfig#sharedAccessKeyName:member",
              "docComment": "/**\n * @property {string} sharedAccessKeyName - The name of the access key.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sharedAccessKeyName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "sharedAccessKeyName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@azure/core-amqp!IotHubConnectionConfig:namespace",
          "docComment": "/**\n * @module IotHubConnectionConfig  @ignore\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare namespace IotHubConnectionConfig "
            }
          ],
          "releaseTag": "Public",
          "name": "IotHubConnectionConfig",
          "members": [
            {
              "kind": "Function",
              "canonicalReference": "@azure/core-amqp!IotHubConnectionConfig.convertToEventHubConnectionConfig:function(1)",
              "docComment": "/**\n * Convert iothub connection config to eventhub connection config.  @ignore\n *\n * @param  - {IotHubConnectionConfig} iotHubConfig\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function convertToEventHubConnectionConfig(iotHubConfig: "
                },
                {
                  "kind": "Reference",
                  "text": "IotHubConnectionConfig",
                  "canonicalReference": "@azure/core-amqp!IotHubConnectionConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "EventHubConnectionConfig",
                  "canonicalReference": "@azure/core-amqp!EventHubConnectionConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "iotHubConfig",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "convertToEventHubConnectionConfig"
            },
            {
              "kind": "Function",
              "canonicalReference": "@azure/core-amqp!IotHubConnectionConfig.create:function(1)",
              "docComment": "/**\n * Creates the connection config.  @ignore\n *\n * @param  - {string} connectionString - The event hub connection string\n *\n * @param  - {string} [path] - The name/path of the entity (hub name) to which the connection needs to happen\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function create(connectionString: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", path?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "IotHubConnectionConfig",
                  "canonicalReference": "@azure/core-amqp!IotHubConnectionConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "connectionString",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "path",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "create"
            },
            {
              "kind": "Function",
              "canonicalReference": "@azure/core-amqp!IotHubConnectionConfig.validate:function(1)",
              "docComment": "/**\n * Validates the properties of connection config.  @ignore\n *\n * @param  - {ConnectionConfig} config The connection config to be validated.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function validate(config: "
                },
                {
                  "kind": "Reference",
                  "text": "IotHubConnectionConfig",
                  "canonicalReference": "@azure/core-amqp!IotHubConnectionConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "validate"
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@azure/core-amqp!IotHubConnectionStringModel:interface",
          "docComment": "/**\n * Describes the iothub connection string model.  @interface IotHubConnectionStringModel\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IotHubConnectionStringModel "
            }
          ],
          "releaseTag": "Public",
          "name": "IotHubConnectionStringModel",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!IotHubConnectionStringModel#DeviceId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DeviceId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "DeviceId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!IotHubConnectionStringModel#HostName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "HostName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "HostName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!IotHubConnectionStringModel#SharedAccessKey:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SharedAccessKey: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "SharedAccessKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!IotHubConnectionStringModel#SharedAccessKeyName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SharedAccessKeyName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "SharedAccessKeyName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@azure/core-amqp!IotSharedKeyCredential:class",
          "docComment": "/**\n * @class IotSharedKeyCredential  @ignore Defines the IotSharedKeyCredential for IotHub.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class IotSharedKeyCredential extends "
            },
            {
              "kind": "Reference",
              "text": "SharedKeyCredential",
              "canonicalReference": "@azure/core-amqp!SharedKeyCredential:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IotSharedKeyCredential",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@azure/core-amqp!IotSharedKeyCredential#getToken:member(1)",
              "docComment": "/**\n * Gets the sas token for the specified audience for IotHub.  @ignore\n *\n * @param  - {string} [audience] - The audience for which the token is desired. If not provided then the Endpoint from the connection string will be applied.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getToken(audience: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "AccessToken",
                  "canonicalReference": "@azure/core-auth!AccessToken:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "audience",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "getToken"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@azure/core-amqp!isIotHubConnectionString:function(1)",
          "docComment": "/**\n * Determines whether the given connection string is an iothub connection string.\n *\n * @param  - {string} connectionString The connection string.  @return {boolean} boolean.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isIotHubConnectionString(connectionString: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "connectionString",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "isIotHubConnectionString"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@azure/core-amqp!isNode:var",
          "docComment": "/**\n * A constant that indicates whether the environment is node.js or browser based.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "isNode: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            }
          ],
          "releaseTag": "Public",
          "name": "isNode",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@azure/core-amqp!isSystemError:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isSystemError(err: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "err",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "isSystemError"
        },
        {
          "kind": "Interface",
          "canonicalReference": "@azure/core-amqp!MessageHeader:interface",
          "docComment": "/**\n * Describes the defined set of standard header properties of the message.  @interface MessageHeader\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface MessageHeader "
            }
          ],
          "releaseTag": "Public",
          "name": "MessageHeader",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!MessageHeader#deliveryCount:member",
              "docComment": "/**\n * @property {number} [deliveryCount] The number of prior unsuccessful delivery attempts.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "deliveryCount?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "deliveryCount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!MessageHeader#durable:member",
              "docComment": "/**\n * @property {boolean} [durable] Specifies durability requirements.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "durable?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "durable",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!MessageHeader#firstAcquirer:member",
              "docComment": "/**\n * @property {boolean} [firstAcquirer] If this value is true, then this message has not been acquired by any other link. Ifthis value is false, then this message MAY have previously been acquired by another link or links.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "firstAcquirer?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "firstAcquirer",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!MessageHeader#priority:member",
              "docComment": "/**\n * @property {number} [priority] The relative message priority. Higher numbers indicate higher priority messages.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "priority?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "priority",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!MessageHeader#ttl:member",
              "docComment": "/**\n * @property {number} [ttl] time to live in ms.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ttl?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "ttl",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@azure/core-amqp!MessageHeader:namespace",
          "docComment": "/**\n * Describes the operations that can be performed on the message header.  @module MessageHeader\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare namespace MessageHeader "
            }
          ],
          "releaseTag": "Public",
          "name": "MessageHeader",
          "members": [
            {
              "kind": "Function",
              "canonicalReference": "@azure/core-amqp!MessageHeader.fromAmqpMessageHeader:function(1)",
              "docComment": "/**\n * Converts AmqpMessageHeader to MessageHeader.\n *\n * @param  - {AmqpMessageHeader} props Amqp Message Header\n *\n * @returns {MessageHeader} MessageHeader.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function fromAmqpMessageHeader(props: "
                },
                {
                  "kind": "Reference",
                  "text": "AmqpMessageHeader",
                  "canonicalReference": "rhea!MessageHeader:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "MessageHeader",
                  "canonicalReference": "@azure/core-amqp!MessageHeader:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "fromAmqpMessageHeader"
            },
            {
              "kind": "Function",
              "canonicalReference": "@azure/core-amqp!MessageHeader.toAmqpMessageHeader:function(1)",
              "docComment": "/**\n * Converts MessageHeader to AmqpMessageHeader.\n *\n * @param  - {MessageHeader} props Message header.\n *\n * @returns {AmqpMessageHeader} AmqpMessageHeader\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function toAmqpMessageHeader(props: "
                },
                {
                  "kind": "Reference",
                  "text": "MessageHeader",
                  "canonicalReference": "@azure/core-amqp!MessageHeader:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "AmqpMessageHeader",
                  "canonicalReference": "rhea!MessageHeader:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "toAmqpMessageHeader"
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@azure/core-amqp!MessageProperties:interface",
          "docComment": "/**\n * Describes the defined set of standard properties of the message.  @interface MessageProperties\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface MessageProperties "
            }
          ],
          "releaseTag": "Public",
          "name": "MessageProperties",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!MessageProperties#absoluteExpiryTime:member",
              "docComment": "/**\n * @property {number} [absoluteExpiryTime] The time when this message is considered expired.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "absoluteExpiryTime?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "absoluteExpiryTime",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!MessageProperties#contentEncoding:member",
              "docComment": "/**\n * @property {string} [contentEncoding] The content-encoding property is used as a modifier to the content-type. When present, its valueindicates what additional content encodings have been applied to the application-data.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "contentEncoding?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "contentEncoding",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!MessageProperties#contentType:member",
              "docComment": "/**\n * @property {string} [contentType] MIME type for the message.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "contentType?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "contentType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!MessageProperties#correlationId:member",
              "docComment": "/**\n * @property {string | number | Buffer} [correlationId] The id that can be used to mark or identify messages between clients.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "correlationId?: "
                },
                {
                  "kind": "Content",
                  "text": "string | number | "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "correlationId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!MessageProperties#creationTime:member",
              "docComment": "/**\n * @property {number} [creationTime] The time this message was created.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "creationTime?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "creationTime",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!MessageProperties#groupId:member",
              "docComment": "/**\n * @property {string} [groupId] The group this message belongs to.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "groupId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "groupId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!MessageProperties#groupSequence:member",
              "docComment": "/**\n * @property {number} [groupSequence] The sequence number of this message with its group.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "groupSequence?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "groupSequence",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!MessageProperties#messageId:member",
              "docComment": "/**\n * @property {string | number | Buffer} [messageId] The application message identifier that uniquely idenitifes a message. The user is responsible for making sure that this is unique in the given context. Guids usually make a good fit.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "messageId?: "
                },
                {
                  "kind": "Content",
                  "text": "string | number | "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "messageId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!MessageProperties#replyTo:member",
              "docComment": "/**\n * @property {string} [replyTo] The address of the node to send replies to.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "replyTo?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "replyTo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!MessageProperties#replyToGroupId:member",
              "docComment": "/**\n * @property {string} [replyToGroupId] The group the reply message belongs to.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "replyToGroupId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "replyToGroupId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!MessageProperties#subject:member",
              "docComment": "/**\n * @property {string} [subject] A common field for summary information about the message content and purpose.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "subject?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "subject",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!MessageProperties#to:member",
              "docComment": "/**\n * @property {string} [to] The address of the node the message is destined for.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "to?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "to",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!MessageProperties#userId:member",
              "docComment": "/**\n * @property {string} [userId] The identity of the user responsible for producing the message.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "userId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "userId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@azure/core-amqp!MessageProperties:namespace",
          "docComment": "/**\n * Describes the operations that can be performed on the amqp message properties.  @module MessageProperties\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare namespace MessageProperties "
            }
          ],
          "releaseTag": "Public",
          "name": "MessageProperties",
          "members": [
            {
              "kind": "Function",
              "canonicalReference": "@azure/core-amqp!MessageProperties.fromAmqpMessageProperties:function(1)",
              "docComment": "/**\n * Converts AmqpMessageProperties to MessageProperties.\n *\n * @param  - {AmqpMessageProperties} props Amqp message properties.\n *\n * @returns {MessageProperties} MessageProperties.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function fromAmqpMessageProperties(props: "
                },
                {
                  "kind": "Reference",
                  "text": "AmqpMessageProperties",
                  "canonicalReference": "rhea!MessageProperties:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "MessageProperties",
                  "canonicalReference": "@azure/core-amqp!MessageProperties:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "fromAmqpMessageProperties"
            },
            {
              "kind": "Function",
              "canonicalReference": "@azure/core-amqp!MessageProperties.toAmqpMessageProperties:function(1)",
              "docComment": "/**\n * Converts MessageProperties to AmqpMessageProperties.\n *\n * @param  - {MessageProperties} props Message properties.\n *\n * @returns {AmqpMessageProperties} AmqpMessageProperties.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function toAmqpMessageProperties(props: "
                },
                {
                  "kind": "Reference",
                  "text": "MessageProperties",
                  "canonicalReference": "@azure/core-amqp!MessageProperties:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "AmqpMessageProperties",
                  "canonicalReference": "rhea!MessageProperties:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "toAmqpMessageProperties"
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@azure/core-amqp!MessagingError:class",
          "docComment": "/**\n * Describes the base class for Messaging Error.  @class {MessagingError}  @extends Error\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MessagingError extends "
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "MessagingError",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@azure/core-amqp!MessagingError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `MessagingError` class\n *\n * @param  - {string} message The error message that provides more information about the error.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@azure/core-amqp!MessagingError#condition:member",
              "docComment": "/**\n * @property {string} [condition] The error condition.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "condition?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "condition",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@azure/core-amqp!MessagingError#info:member",
              "docComment": "/**\n * @property {any} [info] Any additional error information given by the service.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "info?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "info",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@azure/core-amqp!MessagingError#name:member",
              "docComment": "/**\n * @property {string} name The error name. Default value: \"MessagingError\".\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@azure/core-amqp!MessagingError#retryable:member",
              "docComment": "/**\n * @property {boolean} retryable Describes whether the error is retryable. Default: true.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "retryable: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "retryable",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@azure/core-amqp!MessagingError#translated:member",
              "docComment": "/**\n * @property {boolean} translated Has the error been translated. Default: true.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "translated: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "translated",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@azure/core-amqp!parseConnectionString:function(1)",
          "docComment": "/**\n * Parses the connection string and returns an object of type T.\n *\n * Connection strings have the following syntax:\n *\n * ConnectionString ::= Part { \";\" Part } [ \";\" ] [ WhiteSpace ] Part ::= [ PartLiteral [ \"=\" PartLiteral ] ] PartLiteral ::= [ WhiteSpace ] Literal [ WhiteSpace ] Literal ::= ? any sequence of characters except ; or = or WhiteSpace ? WhiteSpace ::= ? all whitespace characters including \\r and \\n ?\n *\n * @param  - {string} connectionString The connection string to be parsed.\n *\n * @returns {ParsedOutput<T>} ParsedOutput<T>.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function parseConnectionString<T>(connectionString: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "ParsedOutput",
              "canonicalReference": "@azure/core-amqp!ParsedOutput:type"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "connectionString",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "parseConnectionString"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@azure/core-amqp!ParsedOutput:type",
          "docComment": "/**\n * Defines an object with possible properties defined in T.  @type ParsedOutput<T>\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ParsedOutput<T> = "
            },
            {
              "kind": "Content",
              "text": "{\n    [P in keyof T]: T[P];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ParsedOutput",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@azure/core-amqp!randomNumberFromInterval:function(1)",
          "docComment": "/**\n * Generates a random number between the given interval\n *\n * @param  - {number} min Min number of the range (inclusive).\n *\n * @param  - {number} max Max number of the range (inclusive).\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function randomNumberFromInterval(min: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", max: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "min",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "max",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "randomNumberFromInterval"
        },
        {
          "kind": "Class",
          "canonicalReference": "@azure/core-amqp!RequestResponseLink:class",
          "docComment": "/**\n * Describes an amqp request(sender)-response(receiver) link that is created over an amqp session.  @class RequestResponseLink\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class RequestResponseLink implements "
            },
            {
              "kind": "Reference",
              "text": "ReqResLink",
              "canonicalReference": "rhea-promise!ReqResLink:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "RequestResponseLink",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@azure/core-amqp!RequestResponseLink:constructor(1)",
              "docComment": "/**\n * @constructor Constructs a new instance of the `RequestResponseLink` class\n *\n * @param  - {Session} session The amqp session.\n *\n * @param  - {Sender} sender The amqp sender link.\n *\n * @param  - {Receiver} receiver The amqp receiver link.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(session: "
                },
                {
                  "kind": "Reference",
                  "text": "Session",
                  "canonicalReference": "rhea-promise!Session:class"
                },
                {
                  "kind": "Content",
                  "text": ", sender: "
                },
                {
                  "kind": "Reference",
                  "text": "Sender",
                  "canonicalReference": "rhea-promise!Sender:class"
                },
                {
                  "kind": "Content",
                  "text": ", receiver: "
                },
                {
                  "kind": "Reference",
                  "text": "Receiver",
                  "canonicalReference": "rhea-promise!Receiver:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "session",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "sender",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "receiver",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@azure/core-amqp!RequestResponseLink#close:member(1)",
              "docComment": "/**\n * Closes the sender, receiver link and the underlying session.\n *\n * @returns {Promise<void>} Promise<void>\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "close(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "close"
            },
            {
              "kind": "Property",
              "canonicalReference": "@azure/core-amqp!RequestResponseLink#connection:member",
              "docComment": "/**\n * Provides the underlying amqp connection object.\n *\n * @returns {Connection} Connection.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly connection: "
                },
                {
                  "kind": "Reference",
                  "text": "Connection",
                  "canonicalReference": "rhea-promise!Connection:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "connection",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@azure/core-amqp!RequestResponseLink.create:member(1)",
              "docComment": "/**\n * Creates an amqp request/response link.\n *\n * @param  - {Connection} connection The amqp connection.\n *\n * @param  - {SenderOptions} senderOptions Options that must be provided to create the sender link.\n *\n * @param  - {ReceiverOptions} receiverOptions Options that must be provided to create the receiver link.\n *\n * @returns {Promise<RequestResponseLink>} Promise<RequestResponseLink>\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static create(connection: "
                },
                {
                  "kind": "Reference",
                  "text": "Connection",
                  "canonicalReference": "rhea-promise!Connection:class"
                },
                {
                  "kind": "Content",
                  "text": ", senderOptions: "
                },
                {
                  "kind": "Reference",
                  "text": "SenderOptions",
                  "canonicalReference": "rhea-promise!SenderOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", receiverOptions: "
                },
                {
                  "kind": "Reference",
                  "text": "ReceiverOptions",
                  "canonicalReference": "rhea-promise!ReceiverOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "RequestResponseLink",
                  "canonicalReference": "@azure/core-amqp!RequestResponseLink:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "connection",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "senderOptions",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "receiverOptions",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "create"
            },
            {
              "kind": "Method",
              "canonicalReference": "@azure/core-amqp!RequestResponseLink#isOpen:member(1)",
              "docComment": "/**\n * Indicates whether the session and the sender and receiver links are all open or closed.\n *\n * @returns {boolean} boolean - `true` - `open`, `false` - `closed`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isOpen(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "isOpen"
            },
            {
              "kind": "Property",
              "canonicalReference": "@azure/core-amqp!RequestResponseLink#receiver:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "receiver: "
                },
                {
                  "kind": "Reference",
                  "text": "Receiver",
                  "canonicalReference": "rhea-promise!Receiver:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "receiver",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@azure/core-amqp!RequestResponseLink#remove:member(1)",
              "docComment": "/**\n * Removes the sender, receiver link and it's underlying session.\n *\n * @returns {void} void\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "remove(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "remove"
            },
            {
              "kind": "Property",
              "canonicalReference": "@azure/core-amqp!RequestResponseLink#sender:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sender: "
                },
                {
                  "kind": "Reference",
                  "text": "Sender",
                  "canonicalReference": "rhea-promise!Sender:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "sender",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@azure/core-amqp!RequestResponseLink#sendRequest:member(1)",
              "docComment": "/**\n * Sends the given request message and returns the received response. If the operation is not completed in the provided timeout in milliseconds `default: 60000`, then `OperationTimeoutError` is thrown.\n *\n * @param  - {Message} request The AMQP (request) message.\n *\n * @param  - {SendRequestOptions} [options] Options that can be provided while sending a request.\n *\n * @returns {Promise<Message>} Promise<Message> The AMQP (response) message.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sendRequest(request: "
                },
                {
                  "kind": "Reference",
                  "text": "AmqpMessage",
                  "canonicalReference": "rhea!Message:interface"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "SendRequestOptions",
                  "canonicalReference": "@azure/core-amqp!SendRequestOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AmqpMessage",
                  "canonicalReference": "rhea!Message:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "request",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "sendRequest"
            },
            {
              "kind": "Property",
              "canonicalReference": "@azure/core-amqp!RequestResponseLink#session:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "session: "
                },
                {
                  "kind": "Reference",
                  "text": "Session",
                  "canonicalReference": "rhea-promise!Session:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "session",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@azure/core-amqp!retry:function(1)",
          "docComment": "/**\n * Every operation is attempted at least once. Additional attempts are made if the previous attempt failed with a retryable error. The number of additional attempts is governed by the `maxRetries` property provided on the `RetryConfig` argument.\n *\n * If `mode` option is set to `Fixed`, then the retries are made on the given operation for a specified number of times, with a fixed delay in between each retry each time.\n *\n * If `mode` option is set to `Exponential`, then the delay between retries is adjusted to increase exponentially with each attempt using back-off factor of power 2.\n *\n * @param  - {RetryConfig<T>} config Parameters to configure retry operation\n *\n * @return {Promise<T>} Promise<T>.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function retry<T>(config: "
            },
            {
              "kind": "Reference",
              "text": "RetryConfig",
              "canonicalReference": "@azure/core-amqp!RetryConfig:interface"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 4,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "config",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "retry"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@azure/core-amqp!retryableErrors:var",
          "docComment": "/**\n * Provides a list of retryable AMQP errors. \"InternalServerError\", \"ServerBusyError\", \"ServiceUnavailableError\", \"OperationCancelledError\", \"SenderBusyError\", \"MessagingError\", \"DetachForcedError\", \"ConnectionForcedError\", \"TransferLimitExceededError\"\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "retryableErrors: "
            },
            {
              "kind": "Content",
              "text": "string[]"
            }
          ],
          "releaseTag": "Public",
          "name": "retryableErrors",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@azure/core-amqp!RetryConfig:interface",
          "docComment": "/**\n * Describes the parameters that need to be configured for the retry operation.  @interface RetryConfig\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface RetryConfig<T> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "RetryConfig",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!RetryConfig#abortSignal:member",
              "docComment": "/**\n * @property {AbortSignalLike} [abortSignal] The `AbortSignal` associated with the operation being retried on. If this signal is fired during the wait time between retries, then the `retry()` method will ensure that the wait is abandoned and the retry process gets cancelled. If this signal is fired when the operation is in progress, then the operation is expected to react to it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abortSignal?: "
                },
                {
                  "kind": "Reference",
                  "text": "AbortSignalLike",
                  "canonicalReference": "@azure/abort-controller!AbortSignalLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "abortSignal",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!RetryConfig#connectionHost:member",
              "docComment": "/**\n * @property {string} connectionHost The host \"<yournamespace>.servicebus.windows.net\". Used to check network connectivity.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "connectionHost?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "connectionHost",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!RetryConfig#connectionId:member",
              "docComment": "/**\n * @property {string} connectionId The connection identifier. Used in logging information. Extremely useful when multiple connections are logged in the same file.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "connectionId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "connectionId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!RetryConfig#operation:member",
              "docComment": "/**\n * @property {Promise<T>} operation The operation that needs to be retried.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "operation: "
                },
                {
                  "kind": "Content",
                  "text": "() => "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "operation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!RetryConfig#operationType:member",
              "docComment": "/**\n * @property {RetryOperationType} operationType The name/type of operation to be performed. Extremely useful in providing better debug logs.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "operationType: "
                },
                {
                  "kind": "Reference",
                  "text": "RetryOperationType",
                  "canonicalReference": "@azure/core-amqp!RetryOperationType:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "operationType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!RetryConfig#retryOptions:member",
              "docComment": "/**\n * @property {RetryOptions} retryOptions The retry related options associated with given operation execution.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "retryOptions?: "
                },
                {
                  "kind": "Reference",
                  "text": "RetryOptions",
                  "canonicalReference": "@azure/core-amqp!RetryOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "retryOptions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Enum",
          "canonicalReference": "@azure/core-amqp!RetryMode:enum",
          "docComment": "/**\n * Describes the Retry Mode type  @enum RetryMode\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum RetryMode "
            }
          ],
          "releaseTag": "Public",
          "name": "RetryMode",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!RetryMode.Exponential:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Exponential = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "releaseTag": "Public",
              "name": "Exponential",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!RetryMode.Fixed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Fixed = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "releaseTag": "Public",
              "name": "Fixed",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "Enum",
          "canonicalReference": "@azure/core-amqp!RetryOperationType:enum",
          "docComment": "/**\n * Describes the retry operation type.  @enum RetryOperationType\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum RetryOperationType "
            }
          ],
          "releaseTag": "Public",
          "name": "RetryOperationType",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!RetryOperationType.cbsAuth:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cbsAuth = "
                },
                {
                  "kind": "Content",
                  "text": "\"cbsAuth\""
                }
              ],
              "releaseTag": "Public",
              "name": "cbsAuth",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!RetryOperationType.connection:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "connection = "
                },
                {
                  "kind": "Content",
                  "text": "\"connection\""
                }
              ],
              "releaseTag": "Public",
              "name": "connection",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!RetryOperationType.management:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "management = "
                },
                {
                  "kind": "Content",
                  "text": "\"management\""
                }
              ],
              "releaseTag": "Public",
              "name": "management",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!RetryOperationType.receiveMessage:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "receiveMessage = "
                },
                {
                  "kind": "Content",
                  "text": "\"receiveMessage\""
                }
              ],
              "releaseTag": "Public",
              "name": "receiveMessage",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!RetryOperationType.receiverLink:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "receiverLink = "
                },
                {
                  "kind": "Content",
                  "text": "\"receiverLink\""
                }
              ],
              "releaseTag": "Public",
              "name": "receiverLink",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!RetryOperationType.senderLink:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "senderLink = "
                },
                {
                  "kind": "Content",
                  "text": "\"senderLink\""
                }
              ],
              "releaseTag": "Public",
              "name": "senderLink",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!RetryOperationType.sendMessage:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sendMessage = "
                },
                {
                  "kind": "Content",
                  "text": "\"sendMessage\""
                }
              ],
              "releaseTag": "Public",
              "name": "sendMessage",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!RetryOperationType.session:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "session = "
                },
                {
                  "kind": "Content",
                  "text": "\"session\""
                }
              ],
              "releaseTag": "Public",
              "name": "session",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@azure/core-amqp!RetryOptions:interface",
          "docComment": "/**\n * Retry policy options that determine the mode, number of retries, retry interval etc.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface RetryOptions "
            }
          ],
          "releaseTag": "Public",
          "name": "RetryOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!RetryOptions#maxRetries:member",
              "docComment": "/**\n * @property {number} [maxRetries] Number of times the operation needs to be retried in case of retryable error. Default: 3.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxRetries?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "maxRetries",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!RetryOptions#maxRetryDelayInMs:member",
              "docComment": "/**\n * @property {number} [maxRetryDelayInMs] Denotes the maximum delay between retries that the retry attempts will be capped at. Applicable only when performing exponential retry.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxRetryDelayInMs?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "maxRetryDelayInMs",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!RetryOptions#mode:member",
              "docComment": "/**\n * @property {RetryMode} [mode] Denotes which retry mode to apply. If undefined, defaults to `Fixed`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mode?: "
                },
                {
                  "kind": "Reference",
                  "text": "RetryMode",
                  "canonicalReference": "@azure/core-amqp!RetryMode:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "mode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!RetryOptions#retryDelayInMs:member",
              "docComment": "/**\n * @property {number} [retryDelayInMs] Amount of time to wait in milliseconds before making the next attempt. Default: `30000 milliseconds`. When `mode` option is set to `Exponential`, this is used to compute the exponentially increasing delays between retries.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "retryDelayInMs?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "retryDelayInMs",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!RetryOptions#timeoutInMs:member",
              "docComment": "/**\n * Number of milliseconds to wait before declaring that current attempt has timed out which will trigger a retry A minimum value of `60000` milliseconds will be used if a value not greater than this is provided.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "timeoutInMs?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "timeoutInMs",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@azure/core-amqp!SendRequestOptions:interface",
          "docComment": "/**\n * Describes the options that can be specified while sending a request.  @interface SendRequestOptions\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SendRequestOptions "
            }
          ],
          "releaseTag": "Public",
          "name": "SendRequestOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!SendRequestOptions#abortSignal:member",
              "docComment": "/**\n * @property {AbortSignalLike} [abortSignal] Cancels the operation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abortSignal?: "
                },
                {
                  "kind": "Reference",
                  "text": "AbortSignalLike",
                  "canonicalReference": "@azure/abort-controller!AbortSignalLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "abortSignal",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!SendRequestOptions#requestName:member",
              "docComment": "/**\n * @property {string} [requestName] Name of the request being performed.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "requestName?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "requestName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!SendRequestOptions#timeoutInMs:member",
              "docComment": "/**\n * @property {number} [timeoutInMs] Max time to wait for the operation to complete. Default: `60000 milliseconds`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "timeoutInMs?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "timeoutInMs",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@azure/core-amqp!ServiceBusConnectionStringModel:interface",
          "docComment": "/**\n * Describes the servicebus connection string model.  @interface ServiceBusConnectionStringModel\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ServiceBusConnectionStringModel "
            }
          ],
          "releaseTag": "Public",
          "name": "ServiceBusConnectionStringModel",
          "members": [
            {
              "kind": "IndexSignature",
              "canonicalReference": "@azure/core-amqp!ServiceBusConnectionStringModel:index(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "[x: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!ServiceBusConnectionStringModel#Endpoint:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Endpoint: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "Endpoint",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!ServiceBusConnectionStringModel#EntityPath:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "EntityPath?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "EntityPath",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!ServiceBusConnectionStringModel#SharedAccessKey:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SharedAccessKey: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "SharedAccessKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!ServiceBusConnectionStringModel#SharedAccessKeyName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SharedAccessKeyName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "SharedAccessKeyName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@azure/core-amqp!SharedKeyCredential:class",
          "docComment": "/**\n * @class SharedKeyCredential Defines the SharedKeyCredential .\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class SharedKeyCredential "
            }
          ],
          "releaseTag": "Public",
          "name": "SharedKeyCredential",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@azure/core-amqp!SharedKeyCredential#_createToken:member(1)",
              "docComment": "/**\n * @protected Creates the sas token based on the provided information\n *\n * @param  - {string | number} expiry - The time period in unix time after which the token will expire.\n *\n * @param  - {string} [audience] - The audience for which the token is desired.\n *\n * @param  - {string | Buffer} [hashInput] The input to be provided to hmac to create the hash.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected _createToken(expiry: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", audience: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", hashInput?: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "AccessToken",
                  "canonicalReference": "@azure/core-auth!AccessToken:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "expiry",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "audience",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "hashInput",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  }
                }
              ],
              "name": "_createToken"
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@azure/core-amqp!SharedKeyCredential:constructor(1)",
              "docComment": "/**\n * Initializes a new instance of SharedKeyCredential  @constructor\n *\n * @param  - {string} keyName - The name of the EventHub/ServiceBus key.\n *\n * @param  - {string} key - The secret value associated with the above EventHub/ServiceBus key\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(keyName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "keyName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@azure/core-amqp!SharedKeyCredential.fromConnectionString:member(1)",
              "docComment": "/**\n * Creates a token provider from the EventHub/ServiceBus connection string;\n *\n * @param  - {string} connectionString - The EventHub/ServiceBus connection string\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static fromConnectionString(connectionString: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "SharedKeyCredential",
                  "canonicalReference": "@azure/core-amqp!SharedKeyCredential:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "connectionString",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "fromConnectionString"
            },
            {
              "kind": "Method",
              "canonicalReference": "@azure/core-amqp!SharedKeyCredential#getToken:member(1)",
              "docComment": "/**\n * Gets the sas token for the specified audience\n *\n * @param  - {string} [audience] - The audience for which the token is desired.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getToken(audience: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "AccessToken",
                  "canonicalReference": "@azure/core-auth!AccessToken:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "audience",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "getToken"
            },
            {
              "kind": "Property",
              "canonicalReference": "@azure/core-amqp!SharedKeyCredential#key:member",
              "docComment": "/**\n * @property {string} key - The secret value associated with the above EventHub/ServiceBus key.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "key",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@azure/core-amqp!SharedKeyCredential#keyName:member",
              "docComment": "/**\n * @property {string} keyName - The name of the EventHub/ServiceBus key.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "keyName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "keyName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@azure/core-amqp!StorageConnectionStringModel:interface",
          "docComment": "/**\n * Describes the stroage connection string model.  @interface StorageConnectionStringModel\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface StorageConnectionStringModel "
            }
          ],
          "releaseTag": "Public",
          "name": "StorageConnectionStringModel",
          "members": [
            {
              "kind": "IndexSignature",
              "canonicalReference": "@azure/core-amqp!StorageConnectionStringModel:index(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "[x: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!StorageConnectionStringModel#AccountKey:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "AccountKey: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "AccountKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!StorageConnectionStringModel#AccountName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "AccountName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "AccountName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!StorageConnectionStringModel#DefaultEndpointsProtocol:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DefaultEndpointsProtocol: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "DefaultEndpointsProtocol",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-amqp!StorageConnectionStringModel#EndpointSuffix:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "EndpointSuffix: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "EndpointSuffix",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Enum",
          "canonicalReference": "@azure/core-amqp!SystemErrorConditionMapper:enum",
          "docComment": "/**\n * Maps some SytemErrors to amqp error conditions  @enum SystemErrorConditionMapper\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum SystemErrorConditionMapper "
            }
          ],
          "releaseTag": "Public",
          "name": "SystemErrorConditionMapper",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!SystemErrorConditionMapper.EBUSY:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "EBUSY = "
                },
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:server-busy\""
                }
              ],
              "releaseTag": "Public",
              "name": "EBUSY",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!SystemErrorConditionMapper.ECONNREFUSED:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ECONNREFUSED = "
                },
                {
                  "kind": "Content",
                  "text": "\"amqp:connection:forced\""
                }
              ],
              "releaseTag": "Public",
              "name": "ECONNREFUSED",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!SystemErrorConditionMapper.ECONNRESET:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ECONNRESET = "
                },
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:timeout\""
                }
              ],
              "releaseTag": "Public",
              "name": "ECONNRESET",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!SystemErrorConditionMapper.EHOSTDOWN:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "EHOSTDOWN = "
                },
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:timeout\""
                }
              ],
              "releaseTag": "Public",
              "name": "EHOSTDOWN",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!SystemErrorConditionMapper.ENETDOWN:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ENETDOWN = "
                },
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:timeout\""
                }
              ],
              "releaseTag": "Public",
              "name": "ENETDOWN",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!SystemErrorConditionMapper.ENETRESET:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ENETRESET = "
                },
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:timeout\""
                }
              ],
              "releaseTag": "Public",
              "name": "ENETRESET",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!SystemErrorConditionMapper.ENETUNREACH:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ENETUNREACH = "
                },
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:timeout\""
                }
              ],
              "releaseTag": "Public",
              "name": "ENETUNREACH",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!SystemErrorConditionMapper.ENONET:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ENONET = "
                },
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:timeout\""
                }
              ],
              "releaseTag": "Public",
              "name": "ENONET",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!SystemErrorConditionMapper.ENOTFOUND:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ENOTFOUND = "
                },
                {
                  "kind": "Content",
                  "text": "\"amqp:not-found\""
                }
              ],
              "releaseTag": "Public",
              "name": "ENOTFOUND",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!SystemErrorConditionMapper.ETIMEDOUT:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ETIMEDOUT = "
                },
                {
                  "kind": "Content",
                  "text": "\"com.microsoft:timeout\""
                }
              ],
              "releaseTag": "Public",
              "name": "ETIMEDOUT",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@azure/core-amqp!Timeout:class",
          "docComment": "/**\n * Describes a Timeout class that can wait for the specified amount of time and then resolve/reject the promise with the given value.  @class Timout\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Timeout "
            }
          ],
          "releaseTag": "Public",
          "name": "Timeout",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@azure/core-amqp!Timeout#clear:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clear(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "clear"
            },
            {
              "kind": "Method",
              "canonicalReference": "@azure/core-amqp!Timeout#set:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "set<T>(t: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", value?: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "t",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "set"
            },
            {
              "kind": "Method",
              "canonicalReference": "@azure/core-amqp!Timeout.set:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static set<T>(t: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", value?: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "t",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "set"
            },
            {
              "kind": "Method",
              "canonicalReference": "@azure/core-amqp!Timeout#wrap:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "wrap<T>(promise: "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ", t: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", value?: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "promise",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "parameterName": "t",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                },
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  }
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "wrap"
            },
            {
              "kind": "Method",
              "canonicalReference": "@azure/core-amqp!Timeout.wrap:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static wrap<T>(promise: "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ", t: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", value?: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "promise",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "parameterName": "t",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                },
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  }
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "wrap"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Enum",
          "canonicalReference": "@azure/core-amqp!TokenType:enum",
          "docComment": "/**\n * Describes the type of supported tokens.  @enum TokenType\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum TokenType "
            }
          ],
          "releaseTag": "Public",
          "name": "TokenType",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!TokenType.CbsTokenTypeJwt:member",
              "docComment": "/**\n * The \"jwt\" token type. Used with AADTokenCredential.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CbsTokenTypeJwt = "
                },
                {
                  "kind": "Content",
                  "text": "\"jwt\""
                }
              ],
              "releaseTag": "Public",
              "name": "CbsTokenTypeJwt",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@azure/core-amqp!TokenType.CbsTokenTypeSas:member",
              "docComment": "/**\n * The sas token type. Used with SharedKeyCredential.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CbsTokenTypeSas = "
                },
                {
                  "kind": "Content",
                  "text": "\"servicebus.windows.net:sastoken\""
                }
              ],
              "releaseTag": "Public",
              "name": "CbsTokenTypeSas",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@azure/core-amqp!translate:function(1)",
          "docComment": "/**\n * Translates the AQMP error received at the protocol layer or a generic Error into a MessagingError.\n *\n * @param  - {AmqpError} err The amqp error that was received.\n *\n * @returns {MessagingError} MessagingError object.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function translate(err: "
            },
            {
              "kind": "Reference",
              "text": "AmqpError",
              "canonicalReference": "rhea!AmqpError:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "MessagingError",
              "canonicalReference": "@azure/core-amqp!MessagingError:class"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "err",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            }
          ],
          "name": "translate"
        }
      ]
    }
  ]
}
